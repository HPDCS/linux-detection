#
# Copyright (C) 2013-2021 Canonical, Ltd.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#

CFLAGS += -Wall -Wextra -DVERSION='"$(VERSION)"' -O2 -std=gnu99 -I.

APPARMOR_PARSER=/sbin/apparmor_parser

LIB_APPARMOR := -lapparmor
KERNEL=$(shell uname -s)
ifeq (,$(findstring $(KERNEL),Darwin DragonFly FreeBSD NetBSD OpenBSD))
LIB_BSD := -lbsd
endif
LIB_Z := -lz
LIB_CRYPT := -lcrypt
LIB_RT := -lrt
LIB_PTHREAD := -pthread
LIB_AIO := -laio
LIB_SCTP := -lsctp
LIB_DL := -ldl
LIB_IPSEC_MB := -lIPSec_MB
LIB_JUDY := -lJudy
LIB_KMOD := -lkmod
LIB_ATOMIC := -latomic
LIB_MATH := -lm

DIR=test
MAKE_OPTS=-f Makefile.config --no-print-directory HAVE_CONFIG=1

#
#  Load in current config; use 'make clean' to clear this
#
-include config

CFLAGS += $(CONFIG_CFLAGS)
LDFLAGS += $(CONFIG_LDFLAGS)
OBJS += $(CONFIG_OBJS)

#
# Static flags, only to be used when using GCC
#
ifeq ($(STATIC),1)
LDFLAGS += -static
CFLAGS += -DBUILD_STATIC
endif

#
#  Double empty line is intentional!
#
define newline


endef

using = $(info using $(2) ... $(if $(filter 1,$(1)),yes,no))
check = $(info $(newline)Checking $(1):)

#
#  Determine the system build config
#
ifndef HAVE_CONFIG
HAVE_CONFIG=1

ifeq ($(shell uname -s),SunOS)
	CONFIG_LDFLAGS += -lsocket -lnsl
endif

$(call check,libraries)

ifndef $(HAVE_LIB_AIO)
HAVE_LIB_AIO = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_AIO) TEST_PROG=test-libaio have_test_prog)
ifeq ($(HAVE_LIB_AIO),1)
	CONFIG_CFLAGS += -DHAVE_LIB_AIO
	CONFIG_LDFLAGS += $(LIB_AIO)
endif
$(call using,$(HAVE_LIB_AIO),$(LIB_AIO))
endif

ifndef $(HAVE_LIB_BSD)
HAVE_LIB_BSD = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_BSD) TEST_PROG=test-libbsd have_test_prog)
ifeq ($(HAVE_LIB_BSD),1)
	CONFIG_CFLAGS += -DHAVE_LIB_BSD
	CONFIG_LDFLAGS += $(LIB_BSD)
endif
$(call using,$(HAVE_LIB_BSD),-lbsd)
endif

ifndef $(HAVE_LIB_CRYPT)
HAVE_LIB_CRYPT = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_CRYPT) TEST_PROG=test-libcrypt have_test_prog)
ifeq ($(HAVE_LIB_CRYPT),1)
	CONFIG_CFLAGS += -DHAVE_LIB_CRYPT
	CONFIG_LDFLAGS += $(LIB_CRYPT)
endif
$(call using,$(HAVE_LIB_CRYPT),$(LIB_CRYPT))
endif

ifndef $(HAVE_LIB_RT)
HAVE_LIB_RT = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_RT) TEST_PROG=test-librt have_test_prog)
ifeq ($(HAVE_LIB_RT),1)
	CONFIG_CFLAGS += -DHAVE_LIB_RT
	CONFIG_LDFLAGS += $(LIB_RT)
endif
$(call using,$(HAVE_LIB_RT),$(LIB_RT))
endif

ifndef $(HAVE_LIB_SCTP)
HAVE_LIB_SCTP = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_SCTP) TEST_PROG=test-libsctp have_test_prog)
ifeq ($(HAVE_LIB_SCTP),1)
	CONFIG_CFLAGS += -DHAVE_LIB_SCTP
	CONFIG_LDFLAGS += $(LIB_SCTP)
endif
$(call using,$(HAVE_LIB_SCTP),$(LIB_SCTP))
endif

ifndef $(HAVE_LIB_Z)
HAVE_LIB_Z = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_Z) TEST_PROG=test-libz have_test_prog)
ifeq ($(HAVE_LIB_Z),1)
	CONFIG_CFLAGS += -DHAVE_LIB_Z
	CONFIG_LDFLAGS += $(LIB_Z)
endif
$(call using,$(HAVE_LIB_Z),$(LIB_Z))
endif

ifndef $(HAVE_LIB_DL)
HAVE_LIB_DL = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_DL) TEST_PROG=test-libdl have_test_prog)
ifeq ($(HAVE_LIB_DL),1)
	CONFIG_CFLAGS += -DHAVE_LIB_DL
	CONFIG_LDFLAGS += $(LIB_DL)
endif
$(call using,$(HAVE_LIB_DL),$(LIB_DL))
endif

ifndef $(HAVE_LIB_JUDY)
HAVE_LIB_JUDY = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_JUDY) TEST_PROG=test-judy have_test_prog)
ifeq ($(HAVE_LIB_JUDY),1)
	CONFIG_CFLAGS += -DHAVE_LIB_JUDY
	CONFIG_LDFLAGS += $(LIB_JUDY)
endif
$(call using,$(HAVE_LIB_JUDY),$(LIB_JUDY))
endif

ifndef $(HAVE_LIB_PTHREAD_SPINLOCK)
HAVE_LIB_PTHREAD_SPINLOCK = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_PTHREAD) TEST_PROG=test-libpthread-spinlock have_test_prog)
ifeq ($(HAVE_LIB_PTHREAD_SPINLOCK),1)
	CONFIG_CFLAGS += -DHAVE_LIB_PTHREAD_SPINLOCK
endif
$(call using,$(HAVE_LIB_PTHREAD_SPINLOCK),$(LIB_PTHREAD) spinlock)
endif

#
#  Always add in pthread lib last to resolve pthread linker issues
#
ifndef $(HAVE_LIB_PTHREAD)
HAVE_LIB_PTHREAD = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_PTHREAD) TEST_PROG=test-libpthread have_test_prog)
ifeq ($(HAVE_LIB_PTHREAD),1)
	CONFIG_CFLAGS += -DHAVE_LIB_PTHREAD
	CONFIG_LDFLAGS += $(LIB_PTHREAD)
endif
$(call using,$(HAVE_LIB_PTHREAD),$(LIB_PTHREAD))
endif

ifndef $(HAVE_APPARMOR)
HAVE_APPARMOR = $(shell $(MAKE) $(MAKE_OPTS) have_apparmor)
ifeq ($(HAVE_APPARMOR),1)
	CONFIG_OBJS += apparmor-data.o
	CONFIG_CFLAGS += -DHAVE_APPARMOR
	CONFIG_LDFLAGS += $(LIB_APPARMOR)
endif
$(call using,$(HAVE_APPARMOR),$(LIB_APPARMOR))
endif

ifndef $(HAVE_LIB_IPSEC_MB)
HAVE_LIB_IPSEC_MB = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_IPSEC_MB) TEST_PROG=test-libipsec-mb have_test_prog)
ifeq ($(HAVE_LIB_IPSEC_MB),1)
	CONFIG_CFLAGS += -DHAVE_LIB_IPSEC_MB
	CONFIG_LDFLAGS += $(LIB_IPSEC_MB)
endif
$(call using,$(HAVE_LIB_IPSEC_MB),$(LIB_IPSEC_MB))
endif

ifndef $(HAVE_LIB_KMOD)
HAVE_LIB_KMOD = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS=$(LIB_KMOD) TEST_PROG=test-libkmod have_test_prog)
ifeq ($(HAVE_LIB_KMOD),1)
	CONFIG_CFLAGS += -DHAVE_LIB_KMOD
	CONFIG_LDFLAGS += $(LIB_KMOD)
endif
$(call using,$(HAVE_LIB_KMOD),$(LIB_KMOD))
endif

$(call check,header files)

ifndef $(HAVE_AIO_H)
HAVE_AIO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=aio.h have_header_h)
ifeq ($(HAVE_AIO_H),1)
	CONFIG_CFLAGS += -DHAVE_AIO_H
endif
$(call using,$(HAVE_AIO_H),aio.h)
endif

ifndef $(HAVE_ASM_LDT_H)
HAVE_ASM_LDT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=asm/ldt.h have_header_h)
ifeq ($(HAVE_ASM_LDT_H),1)
	CONFIG_CFLAGS += -DHAVE_ASM_LDT_H
endif
$(call using,$(HAVE_ASM_LDT_H),asm/ldt.h)
endif

ifndef $(HAVE_ASM_MTRR_H)
HAVE_ASM_MTRR_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=asm/mtrr.h have_header_h)
ifeq ($(HAVE_ASM_MTRR_H),1)
	CONFIG_CFLAGS += -DHAVE_ASM_MTRR_H
endif
$(call using,$(HAVE_ASM_MTRR_H),asm/mtrr.h)
endif

ifndef $(HAVE_ASM_PRCTL_H)
HAVE_ASM_PRCTL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=asm/prctl.h have_header_h)
ifeq ($(HAVE_ASM_PRCTL_H),1)
	CONFIG_CFLAGS += -DHAVE_ASM_PRCTL_H
endif
$(call using,$(HAVE_ASM_PRCTL_H),asm/prctl.h)
endif

#
#  This must always come after -pthread so that static linking works
#
ifeq ($(shell uname -s),Haiku)
	CONFIG_LDFLAGS += -lnetwork
else
	CONFIG_LDFLAGS += -lc
endif

ifndef $(HAVE_ATTR_XATTR_H)
HAVE_ATTR_XATTR_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=attr/xattr.h have_header_h)
ifeq ($(HAVE_ATTR_XATTR_H),1)
	CONFIG_CFLAGS += -DHAVE_ATTR_XATTR_H
endif
$(call using,$(HAVE_ATTR_XATTR_H),attr/xattr.h)
endif

ifndef $(HAVE_BSD_STDLIB_H)
HAVE_BSD_STDLIB_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=bsd/stdlib.h have_header_h)
ifeq ($(HAVE_BSD_STDLIB_H),1)
	CONFIG_CFLAGS += -DHAVE_BSD_STDLIB_H
endif
$(call using,$(HAVE_BSD_STDLIB_H),bsd/stdlib.h)
endif

ifndef $(HAVE_BSD_STRING_H)
HAVE_BSD_STRING_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=bsd/string.h have_header_h)
ifeq ($(HAVE_BSD_STRING_H),1)
	CONFIG_CFLAGS += -DHAVE_BSD_STRING_H
endif
$(call using,$(HAVE_BSD_STRING_H),bsd/string.h)
endif

ifndef $(HAVE_BSD_SYS_TREE_H)
HAVE_BSD_SYS_TREE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=bsd/sys/tree.h have_header_h)
ifeq ($(HAVE_BSD_SYS_TREE_H),1)
	CONFIG_CFLAGS += -DHAVE_BSD_SYS_TREE_H
endif
$(call using,$(HAVE_BSD_SYS_TREE_H),bsd/sys/tree.h)
endif

ifndef $(HAVE_BSD_UNISTD_H)
HAVE_BSD_UNISTD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=bsd/unistd.h have_header_h)
ifeq ($(HAVE_BSD_UNISTD_H),1)
	CONFIG_CFLAGS += -DHAVE_BSD_UNISTD_H
endif
$(call using,$(HAVE_BSD_UNISTD_H),bsd/unistd.h)
endif

ifndef $(HAVE_BSD_WCHAR)
HAVE_BSD_WCHAR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-bsd-wchar have_test_prog)
ifeq ($(HAVE_BSD_WCHAR),1)
	CONFIG_CFLAGS += -DHAVE_BSD_WCHAR
endif
$(call using,$(HAVE_BSD_WCHAR),bsd/wchar.h)
endif

ifndef $(HAVE_COMPLEX_H)
HAVE_COMPLEX_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=complex.h have_header_h)
ifeq ($(HAVE_COMPLEX_H),1)
	CONFIG_CFLAGS += -DHAVE_COMPLEX_H
endif
$(call using,$(HAVE_COMPLEX_H),complex.h)
endif

ifndef $(HAVE_CPUID_H)
HAVE_CPUID_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=cpuid.h have_header_h)
ifeq ($(HAVE_CPUID_H),1)
	CONFIG_CFLAGS += -DHAVE_CPUID_H
endif
$(call using,$(HAVE_CPUID_H),cpuid.h)
endif

ifndef $(HAVE_WCHAR)
HAVE_WCHAR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-wchar have_test_prog)
ifeq ($(HAVE_WCHAR),1)
	CONFIG_CFLAGS += -DHAVE_WCHAR
endif
$(call using,$(HAVE_WCHAR),wchar.h)
endif

ifndef $(HAVE_CRYPT_H)
HAVE_CRYPT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=crypt.h have_header_h)
ifeq ($(HAVE_CRYPT_H),1)
	CONFIG_CFLAGS += -DHAVE_CRYPT_H
endif
$(call using,$(HAVE_CRYPT_H),crypt.h)
endif

ifndef $(HAVE_FEATURES_H)
HAVE_FEATURES_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=features.h have_header_h)
ifeq ($(HAVE_FEATURES_H),1)
	CONFIG_CFLAGS += -DHAVE_FEATURES_H
endif
$(call using,$(HAVE_FEATURES_H),features.h)
endif

ifndef $(HAVE_FENV_H)
HAVE_FENV_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=fenv.h have_header_h)
ifeq ($(HAVE_FENV_H),1)
	CONFIG_CFLAGS += -DHAVE_FENV_H
endif
$(call using,$(HAVE_FENV_H),fenv.h)
endif

ifndef $(HAVE_FLOAT_H)
HAVE_FLOAT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=float.h have_header_h)
ifeq ($(HAVE_FLOAT_H),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT_H
endif
$(call using,$(HAVE_FLOAT_H),float.h)
endif

ifndef $(HAVE_GRP_H)
HAVE_GRP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=grp.h have_header_h)
ifeq ($(HAVE_GRP_H),1)
	CONFIG_CFLAGS += -DHAVE_GRP_H
endif
$(call using,$(HAVE_GRP_H),grp.h)
endif

ifndef $(HAVE_INTEL_IPSEC_MB_H)
HAVE_INTEL_IPSEC_MB_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=intel-ipsec-mb.h have_header_h)
ifeq ($(HAVE_INTEL_IPSEC_MB_H),1)
	CONFIG_CFLAGS += -DHAVE_INTEL_IPSEC_MB_H
endif
$(call using,$(HAVE_INTEL_IPSEC_MB_H),intel_ipsec_mb.h)
endif

ifndef $(HAVE_JUDY_H)
HAVE_JUDY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=Judy.h have_header_h)
ifeq ($(HAVE_JUDY_H),1)
	CONFIG_CFLAGS += -DHAVE_JUDY_H
endif
$(call using,$(HAVE_JUDY_H),Judy.h)
endif

ifndef $(HAVE_KEYUTILS_H)
HAVE_KEYUTILS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=keyutils.h have_header_h)
ifeq ($(HAVE_KEYUTILS_H),1)
	CONFIG_CFLAGS += -DHAVE_KEYUTILS_H
endif
$(call using,$(HAVE_KEYUTILS_H),keyutils.h)
endif

ifndef $(HAVE_LIBAIO_H)
HAVE_LIBAIO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=libaio.h have_header_h)
ifeq ($(HAVE_LIBAIO_H),1)
	CONFIG_CFLAGS += -DHAVE_LIBAIO_H
endif
$(call using,$(HAVE_LIBAIO_H),libaio.h)
endif

ifndef $(HAVE_LIBGEN_H)
HAVE_LIBGEN_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=libgen.h have_header_h)
ifeq ($(HAVE_LIBGEN_H),1)
	CONFIG_CFLAGS += -DHAVE_LIBGEN_H
endif
$(call using,$(HAVE_LIBGEN_H),libgen.h)
endif

ifndef $(HAVE_LIBKMOD_H)
HAVE_LIBKMOD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=libkmod.h have_header_h)
ifeq ($(HAVE_LIBKMOD_H),1)
	CONFIG_CFLAGS += -DHAVE_LIBKMOD_H
endif
$(call using,$(HAVE_LIBKMOD_H),libkmod.h)
endif

ifndef $(HAVE_LINK_H)
HAVE_LINK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=link.h have_header_h)
ifeq ($(HAVE_LINK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINK_H
endif
$(call using,$(HAVE_LINK_H),link.h)
endif

ifndef $(HAVE_LINUX_ANDROID_BINDER_H)
HAVE_LINUX_ANDROID_BINDER_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/android/binder.h have_header_h)
ifeq ($(HAVE_LINUX_ANDROID_BINDER_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_ANDROID_BINDER_H
endif
$(call using,$(HAVE_LINUX_ANDROID_BINDER_H),linux/android/binder.h)
endif

ifndef $(HAVE_LINUX_ANDROID_BINDERFS_H)
HAVE_LINUX_ANDROID_BINDERFS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/android/binderfs.h have_header_h)
ifeq ($(HAVE_LINUX_ANDROID_BINDERFS_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_ANDROID_BINDERFS_H
endif
$(call using,$(HAVE_LINUX_ANDROID_BINDERFS_H),linux/android/binderfs.h)
endif

ifndef $(HAVE_LINUX_AUDIT_H)
HAVE_LINUX_AUDIT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/audit.h have_header_h)
ifeq ($(HAVE_LINUX_AUDIT_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_AUDIT_H
endif
$(call using,$(HAVE_LINUX_AUDIT_H),linux/audit.h)
endif

ifndef $(HAVE_LINUX_CDROM_H)
HAVE_LINUX_CDROM_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/cdrom.h have_header_h)
ifeq ($(HAVE_LINUX_CDROM_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_CDROM_H
endif
$(call using,$(HAVE_LINUX_CDROM_H),linux/cdrom.h)
endif

ifndef $(HAVE_LINUX_CN_PROC_H)
HAVE_LINUX_CN_PROC_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/cn_proc.h have_header_h)
ifeq ($(HAVE_LINUX_CN_PROC_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_CN_PROC_H
endif
$(call using,$(HAVE_LINUX_CN_PROC_H),linux/cn_proc.h)
endif

ifndef $(HAVE_LINUX_CONNECTOR_H)
HAVE_LINUX_CONNECTOR_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/connector.h have_header_h)
ifeq ($(HAVE_LINUX_CONNECTOR_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_CONNECTOR_H
endif
$(call using,$(HAVE_LINUX_CONNECTOR_H),linux/connector.h)
endif

ifndef $(HAVE_LINUX_DM_IOCTL_H)
HAVE_LINUX_DM_IOCTL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/dm-ioctl.h have_header_h)
ifeq ($(HAVE_LINUX_DM_IOCTL_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_DM_IOCTL_H
endif
$(call using,$(HAVE_LINUX_DM_IOCTL_H),linux/dm-ioctl.h)
endif

ifndef $(HAVE_LINUX_FD_H)
HAVE_LINUX_FD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/fd.h have_header_h)
ifeq ($(HAVE_LINUX_FD_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FD_H
endif
$(call using,$(HAVE_LINUX_FD_H),linux/fd.h)
endif

ifndef $(HAVE_LINUX_FIEMAP_H)
HAVE_LINUX_FIEMAP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/fiemap.h have_header_h)
ifeq ($(HAVE_LINUX_FIEMAP_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FIEMAP_H
endif
$(call using,$(HAVE_LINUX_FIEMAP_H),linux/fiemap.h)
endif

ifndef $(HAVE_LINUX_FILTER_H)
HAVE_LINUX_FILTER_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/filter.h have_header_h)
ifeq ($(HAVE_LINUX_FILTER_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FILTER_H
$(call using,$(HAVE_LINUX_FILTER_H),linux/filter.h)
endif
endif

ifndef $(HAVE_LINUX_FSVERITY_H)
HAVE_LINUX_FSVERITY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/fsverity.h have_header_h)
ifeq ($(HAVE_LINUX_FSVERITY_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FSVERITY_H
endif
$(call using,$(HAVE_LINUX_FSVERITY_H),linux/fsverity.h)
endif

ifndef $(HAVE_LINUX_FUTEX_H)
HAVE_LINUX_FUTEX_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/futex.h have_header_h)
ifeq ($(HAVE_LINUX_FUTEX_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FUTEX_H
endif
$(call using,$(HAVE_LINUX_FUTEX_H),linux/futex.h)
endif

ifndef $(HAVE_LINUX_FS_H)
HAVE_LINUX_FS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/fs.h have_header_h)
ifeq ($(HAVE_LINUX_FS_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_FS_H
endif
$(call using,$(HAVE_LINUX_FS_H),linux/fs.h)
endif

ifndef $(HAVE_LINUX_GENETLINK_H)
HAVE_LINUX_GENETLINK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/genetlink.h have_header_h)
ifeq ($(HAVE_LINUX_GENETLINK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_GENETLINK_H
endif
$(call using,$(HAVE_LINUX_GENETLINK_H),linux/genetlink.h)
endif

ifndef $(HAVE_LINUX_HDREG_H)
HAVE_LINUX_HDREG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/hdreg.h have_header_h)
ifeq ($(HAVE_LINUX_HDREG_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_HDREG_H
endif
$(call using,$(HAVE_LINUX_HDREG_H),linux/hdreg.h)
endif

ifndef $(HAVE_LINUX_HPET_H)
HAVE_LINUX_HPET_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/hpet.h have_header_h)
ifeq ($(HAVE_LINUX_HPET_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_HPET_H
endif
$(call using,$(HAVE_LINUX_HPET_H),linux/hpet.h)
endif

ifndef $(HAVE_LINUX_IF_ALG_H)
HAVE_LINUX_IF_ALG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/if_alg.h have_header_h)
ifeq ($(HAVE_LINUX_IF_ALG_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_IF_ALG_H
endif
$(call using,$(HAVE_LINUX_IF_ALG_H),linux/if_alg.h)
endif

ifndef $(HAVE_LINUX_IF_PACKET_H)
HAVE_LINUX_IF_PACKET_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/if_packet.h have_header_h)
ifeq ($(HAVE_LINUX_IF_PACKET_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_IF_PACKET_H
endif
$(call using,$(HAVE_LINUX_IF_PACKET_H),linux/if_packet.h)
endif

ifndef $(HAVE_LINUX_IF_TUN_H)
HAVE_LINUX_IF_TUN_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/if_tun.h have_header_h)
ifeq ($(HAVE_LINUX_IF_TUN_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_IF_TUN_H
endif
$(call using,$(HAVE_LINUX_IF_TUN_H),linux/if_tun.h)
endif

ifndef $(HAVE_LINUX_IO_URING_H)
HAVE_LINUX_IO_URING_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/io_uring.h have_header_h)
ifeq ($(HAVE_LINUX_IO_URING_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_IO_URING_H
endif
$(call using,$(HAVE_LINUX_IO_URING_H),linux/io_uring.h)
endif

ifndef $(HAVE_LINUX_KD_H)
HAVE_LINUX_KD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/kd.h have_header_h)
ifeq ($(HAVE_LINUX_KD_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_KD_H
endif
$(call using,$(HAVE_LINUX_KD_H),linux/kd.h)
endif

ifndef $(HAVE_LINUX_LANDLOCK_H)
HAVE_LINUX_LANDLOCK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/landlock.h have_header_h)
ifeq ($(HAVE_LINUX_LANDLOCK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_LANDLOCK_H
endif
$(call using,$(HAVE_LINUX_LANDLOCK_H),linux/landlock.h)
endif

ifndef $(HAVE_LINUX_LOOP_H)
HAVE_LINUX_LOOP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/loop.h have_header_h)
ifeq ($(HAVE_LINUX_LOOP_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_LOOP_H
endif
$(call using,$(HAVE_LINUX_LOOP_H),linux/loop.h)
endif

ifndef $(HAVE_LINUX_MEDIA_H)
HAVE_LINUX_MEDIA_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/media.h have_header_h)
ifeq ($(HAVE_LINUX_MEDIA_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_MEDIA_H
endif
$(call using,$(HAVE_LINUX_MEDIA_H),linux/media.h)
endif

ifndef $(HAVE_LINUX_MEMBARRIER_H)
HAVE_LINUX_MEMBARRIER_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/membarrier.h have_header_h)
ifeq ($(HAVE_LINUX_MEMBARRIER_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_MEMBARRIER_H
endif
$(call using,$(HAVE_LINUX_MEMBARRIER_H),linux/membarrier.h)
endif

ifndef $(HAVE_LINUX_MEMPOLICY_H)
HAVE_LINUX_MEMPOLICY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/mempolicy.h have_header_h)
ifeq ($(HAVE_LINUX_MEMPOLICY_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_MEMPOLICY_H
endif
$(call using,$(HAVE_LINUX_MEMPOLICY_H),linux/mempolicy.h)
endif

ifndef $(HAVE_LINUX_NETLINK_H)
HAVE_LINUX_NETLINK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/netlink.h have_header_h)
ifeq ($(HAVE_LINUX_NETLINK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_NETLINK_H
endif
$(call using,$(HAVE_LINUX_NETLINK_H),linux/netlink.h)
endif

ifndef $(HAVE_LINUX_OPENAT2_H)
HAVE_LINUX_OPENAT2_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/openat2.h have_header_h)
ifeq ($(HAVE_LINUX_OPENAT2_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_OPENAT2_H
endif
$(call using,$(HAVE_LINUX_NETLINK_H),linux/openat2.h)
endif

ifndef $(HAVE_LINUX_PCI_H)
HAVE_LINUX_PCI_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/pci.h have_header_h)
ifeq ($(HAVE_LINUX_PCI_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_PCI_H
endif
$(call using,$(HAVE_LINUX_PCI_H),linux/pci.h)
endif

ifndef $(HAVE_LINUX_PERF_EVENT_H)
HAVE_LINUX_PERF_EVENT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/perf_event.h have_header_h)
ifeq ($(HAVE_LINUX_PERF_EVENT_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_PERF_EVENT_H
endif
$(call using,$(HAVE_LINUX_PERF_EVENT_H),linux/perf_event.h)
endif

ifndef $(HAVE_LINUX_POSIX_TYPES_H)
HAVE_LINUX_POSIX_TYPES_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/posix_types.h have_header_h)
ifeq ($(HAVE_LINUX_POSIX_TYPES_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_POSIX_TYPES_H
endif
$(call using,$(HAVE_LINUX_POSIX_TYPES_H),linux/posix_types.h)
endif

ifndef $(HAVE_LINUX_PPDEV_H)
HAVE_LINUX_PPDEV_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/ppdev.h have_header_h)
ifeq ($(HAVE_LINUX_PPDEV_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_PPDEV_H
endif
$(call using,$(HAVE_LINUX_PPDEV_H),linux/ppdev.h)
endif

ifndef $(HAVE_LINUX_PTP_CLOCK_H)
HAVE_LINUX_PTP_CLOCK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/ptp_clock.h have_header_h)
ifeq ($(HAVE_LINUX_PTP_CLOCK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_PTP_CLOCK_H
endif
$(call using,$(HAVE_LINUX_PTP_CLOCK_H),linux/ptp_clock.h)
endif

ifndef $(HAVE_LINUX_RANDOM_H)
HAVE_LINUX_RANDOM_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/random.h have_header_h)
ifeq ($(HAVE_LINUX_RANDOM_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_RANDOM_H
endif
$(call using,$(HAVE_LINUX_RANDOM_H),linux/random.h)
endif

ifndef $(HAVE_LINUX_RSEQ_H)
HAVE_LINUX_RSEQ_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/rseq.h have_header_h)
ifeq ($(HAVE_LINUX_RSEQ_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_RSEQ_H
endif
$(call using,$(HAVE_LINUX_RSEQ_H),linux/rseq.h)
endif

ifndef $(HAVE_LINUX_RTC_H)
HAVE_LINUX_RTC_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/rtc.h have_header_h)
ifeq ($(HAVE_LINUX_RTC_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_RTC_H
endif
$(call using,$(HAVE_LINUX_RTC_H),linux/rtc.h)
endif

ifndef $(HAVE_LINUX_RTNETLINK_H)
HAVE_LINUX_RTNETLINK_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/rtnetlink.h have_header_h)
ifeq ($(HAVE_LINUX_RTNETLINK_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_RTNETLINK_H
endif
$(call using,$(HAVE_LINUX_RTNETLINK_H),linux/rtnetlink.h)
endif

ifndef $(HAVE_LINUX_SECCOMP_H)
HAVE_LINUX_SECCOMP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/seccomp.h have_header_h)
ifeq ($(HAVE_LINUX_SECCOMP_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SECCOMP_H
endif
$(call using,$(HAVE_LINUX_SECCOMP_H),linux/seccomp.h)
endif

ifndef $(HAVE_LINUX_SERIAL_H)
HAVE_LINUX_SERIAL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/serial.h have_header_h)
ifeq ($(HAVE_LINUX_SERIAL_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SERIAL_H
endif
$(call using,$(HAVE_LINUX_SERIAL_H),linux/serial.h)
endif

ifndef $(HAVE_LINUX_SOCK_DIAG_H)
HAVE_LINUX_SOCK_DIAG_H = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sock-diag have_test_prog)
ifeq ($(HAVE_LINUX_SOCK_DIAG_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SOCK_DIAG_H
endif
$(call using,$(HAVE_LINUX_SOCK_DIAG_H),linux/sock_diag.h)
endif

ifndef $(HAVE_LINUX_SOCKET_H)
HAVE_LINUX_SOCKET_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/socket.h have_header_h)
ifeq ($(HAVE_LINUX_SOCKET_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SOCKET_H
endif
$(call using,$(HAVE_LINUX_SOCKET_H),linux/socket.h)
endif

ifndef $(HAVE_LINUX_SOCKIOS_H)
HAVE_LINUX_SOCKIOS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/sockios.h have_header_h)
ifeq ($(HAVE_LINUX_SOCKIOS_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SOCKIOS_H
endif
$(call using,$(HAVE_LINUX_SOCKIOS_H),linux/sockios.h)
endif

ifndef $(HAVE_LINUX_SYSCTL_H)
HAVE_LINUX_SYSCTL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/sysctl.h have_header_h)
ifeq ($(HAVE_LINUX_SYSCTL_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_SYSCTL_H
endif
$(call using,$(HAVE_LINUX_SYSCTL_H),linux/sysctl.h)
endif

ifndef $(HAVE_LINUX_TASKSTATS_H)
HAVE_LINUX_TASKSTATS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/taskstats.h have_header_h)
ifeq ($(HAVE_LINUX_TASKSTATS_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_TASKSTATS_H
endif
$(call using,$(HAVE_LINUX_TASKSTATS_H),linux/taskstats.h)
endif

ifndef $(HAVE_LINUX_UDP_H)
HAVE_LINUX_UDP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/udp.h have_header_h)
ifeq ($(HAVE_LINUX_UDP_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_UDP_H
endif
$(call using,$(HAVE_LINUX_UDP_H),linux/udp.h)
endif

ifndef $(HAVE_LINUX_UNIX_DIAG_H)
HAVE_LINUX_UNIX_DIAG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/unix_diag.h have_header_h)
ifeq ($(HAVE_LINUX_UNIX_DIAG_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_UNIX_DIAG_H
endif
$(call using,$(HAVE_LINUX_UNIX_DIAG_H),linux/unix_diag.h)
endif

ifndef $(HAVE_LINUX_USERFAULTFD_H)
HAVE_LINUX_USERFAULTFD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/userfaultfd.h have_header_h)
ifeq ($(HAVE_LINUX_USERFAULTFD_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_USERFAULTFD_H
endif
$(call using,$(HAVE_LINUX_USERFAULTFD_H),linux/userfaultfd.h)
endif

ifndef $(HAVE_LINUX_VERSION_H)
HAVE_LINUX_VERSION_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/version.h have_header_h)
ifeq ($(HAVE_LINUX_VERSION_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_VERSION_H
endif
$(call using,$(HAVE_LINUX_VERSION_H),linux/version.h)
endif

ifndef $(HAVE_LINUX_VIDEODEV2_H)
HAVE_LINUX_VIDEODEV2_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/videodev2.h have_header_h)
ifeq ($(HAVE_LINUX_VIDEODEV2_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_VIDEODEV2_H
endif
$(call using,$(HAVE_LINUX_VIDEODEV2_H),linux/videodev2.h)
endif

ifndef $(HAVE_LINUX_VT_H)
HAVE_LINUX_VT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/vt.h have_header_h)
ifeq ($(HAVE_LINUX_VT_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_VT_H
endif
$(call using,$(HAVE_LINUX_VT_H),linux/vt.h)
endif

ifndef $(HAVE_LINUX_WATCHDOG_H)
HAVE_LINUX_WATCHDOG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=linux/watchdog.h have_header_h)
ifeq ($(HAVE_LINUX_WATCHDOG_H),1)
	CONFIG_CFLAGS += -DHAVE_LINUX_WATCHDOG_H
endif
$(call using,$(HAVE_LINUX_WATCHDOG_H),linux/watchdog.h)
endif


ifndef $(HAVE_LOCALE_H)
HAVE_LOCALE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=locale.h have_header_h)
ifeq ($(HAVE_LOCALE_H),1)
	CONFIG_CFLAGS += -DHAVE_LOCALE_H
endif
$(call using,$(HAVE_LOCALE_H),locale.h)
endif

ifndef $(HAVE_MALLOC_H)
HAVE_MALLOC_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=malloc.h have_header_h)
ifeq ($(HAVE_MALLOC_H),1)
	CONFIG_CFLAGS += -DHAVE_MALLOC_H
endif
$(call using,$(HAVE_MALLOC_H),malloc.h)
endif

ifndef $(HAVE_MNTENT_H)
HAVE_MNTENT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=mntent.h have_header_h)
ifeq ($(HAVE_MNTENT_H),1)
	CONFIG_CFLAGS += -DHAVE_MNTENT_H
endif
$(call using,$(HAVE_MNTENT_H),mntent.h)
endif

ifndef $(HAVE_MQUEUE_H)
HAVE_MQUEUE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=mqueue.h have_header_h)
ifeq ($(HAVE_MQUEUE_H),1)
	CONFIG_CFLAGS += -DHAVE_MQUEUE_H
endif
$(call using,$(HAVE_MQUEUE_H),mqueue.h)
endif

ifndef $(HAVE_POLL_H)
HAVE_POLL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=poll.h have_header_h)
ifeq ($(HAVE_POLL_H),1)
	CONFIG_CFLAGS += -DHAVE_POLL_H
endif
$(call using,$(HAVE_POLL_H),poll.h)
endif

ifndef $(HAVE_SCSI_SCSI_H)
HAVE_SCSI_SCSI_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=scsi/scsi.h have_header_h)
ifeq ($(HAVE_SCSI_SCSI_H),1)
	CONFIG_CFLAGS += -DHAVE_SCSI_SCSI_H
endif
$(call using,$(HAVE_SCSI_SCSI_H),scsi/scsi.h)
endif

ifndef $(HAVE_SCSI_SCSI_IOCTL_H)
HAVE_SCSI_SCSI_IOCTL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=scsi/scsi_ioctl.h have_header_h)
ifeq ($(HAVE_SCSI_SCSI_IOCTL_H),1)
	CONFIG_CFLAGS += -DHAVE_SCSI_SCSI_IOCTL_H
endif
$(call using,$(HAVE_SCSI_SCSI_IOCTL_H),scsi/scsi_ioctl.h)
endif

ifndef $(HAVE_SCSI_SG_H)
HAVE_SCSI_SG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=scsi/sg.h have_header_h)
ifeq ($(HAVE_SCSI_SG_H),1)
	CONFIG_CFLAGS += -DHAVE_SCSI_SG_H
endif
$(call using,$(HAVE_SCSI_SG_H),scsi/sg.h)
endif

ifndef $(HAVE_SEMAPHORE_H)
HAVE_SEMAPHORE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=semaphore.h have_header_h)
ifeq ($(HAVE_SEMAPHORE_H),1)
	CONFIG_CFLAGS += -DHAVE_SEMAPHORE_H
endif
$(call using,$(HAVE_SEMAPHORE_H),semaphore.h)
endif

ifndef $(HAVE_STRINGS_H)
HAVE_STRINGS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=strings.h have_header_h)
ifeq ($(HAVE_STRINGS_H),1)
	CONFIG_CFLAGS += -DHAVE_STRINGS_H
endif
$(call using,$(HAVE_STRINGS_H),strings.h)
endif

ifndef $(HAVE_SOUND_ASOUND_H)
HAVE_SOUND_ASOUND_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sound/asound.h have_header_h)
ifeq ($(HAVE_SOUND_ASOUND_H),1)
	CONFIG_CFLAGS += -DHAVE_SOUND_ASOUND_H
endif
$(call using,$(HAVE_SOUND_ASOUND_H),sound/asound.h)
endif

ifndef $(HAVE_SPAWN_H)
HAVE_SPAWN_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=spawn.h have_header_h)
ifeq ($(HAVE_SPAWN_H),1)
	CONFIG_CFLAGS += -DHAVE_SPAWN_H
endif
$(call using,$(HAVE_SPAWN_H),spawn.h)
endif

ifndef $(HAVE_SYSLOG_H)
HAVE_SYSLOG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=syslog.h have_header_h)
ifeq ($(HAVE_SYSLOG_H),1)
	CONFIG_CFLAGS += -DHAVE_SYSLOG_H
endif
$(call using,$(HAVE_SYSLOG_H),syslog.h)
endif

ifndef $(HAVE_SYS_APPARMOR_H)
HAVE_SYS_APPARMOR_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/apparmor.h have_header_h)
ifeq ($(HAVE_SYS_APPARMOR_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_APPARMOR_H
endif
$(call using,$(HAVE_SYS_APPARMOR_H),sys/apparmor.h)
endif

ifndef $(HAVE_SYS_AUXV_H)
HAVE_SYS_AUXV_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/auxv.h have_header_h)
ifeq ($(HAVE_SYS_AUXV_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_AUXV_H
endif
$(call using,$(HAVE_SYS_AUXV_H),sys/auxv.h)
endif

ifndef $(HAVE_SYS_CAPABILITY_H)
HAVE_SYS_CAPABILITY_H = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cap have_test_prog)
ifeq ($(HAVE_SYS_CAPABILITY_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_CAPABILITY_H
endif
$(call using,$(HAVE_SYS_CAPABILITY_H),sys/capability.h)
endif

ifndef $(HAVE_SYS_EPOLL_H)
HAVE_SYS_EPOLL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/epoll.h have_header_h)
ifeq ($(HAVE_SYS_EPOLL_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_EPOLL_H
endif
$(call using,$(HAVE_SYS_EPOLL_H),sys/epoll.h)
endif

ifndef $(HAVE_SYS_EVENTFD_H)
HAVE_SYS_EVENTFD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/eventfd.h have_header_h)
ifeq ($(HAVE_SYS_EVENTFD_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_EVENTFD_H
endif
$(call using,$(HAVE_SYS_EVENTFD_H),sys/eventfd.h)
endif

ifndef $(HAVE_SYS_FANOTIFY_H)
HAVE_SYS_FANOTIFY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/fanotify.h have_header_h)
ifeq ($(HAVE_SYS_FANOTIFY_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_FANOTIFY_H
endif
$(call using,$(HAVE_SYS_FANOTIFY_H),sys/fanotify.h)
endif

ifndef $(HAVE_SYS_FSUID_H)
HAVE_SYS_FSUID_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/fsuid.h have_header_h)
ifeq ($(HAVE_SYS_FSUID_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_FSUID_H
endif
$(call using,$(HAVE_SYS_FSUID_H),sys/fsuid.h)
endif

ifndef $(HAVE_SYS_INOTIFY_H)
HAVE_SYS_INOTIFY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/inotify.h have_header_h)
ifeq ($(HAVE_SYS_INOTIFY_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_INOTIFY_H
endif
$(call using,$(HAVE_SYS_INOTIFY_H),sys/inotify.h)
endif

ifndef $(HAVE_SYS_IO_H)
HAVE_SYS_IO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/io.h have_header_h)
ifeq ($(HAVE_SYS_IO_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_IO_H
endif
$(call using,$(HAVE_SYS_IO_H),sys/io.h)
endif

ifndef $(HAVE_SYS_IPC_H)
HAVE_SYS_IPC_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/ipc.h have_header_h)
ifeq ($(HAVE_SYS_IPC_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_IPC_H
endif
$(call using,$(HAVE_SYS_IPC_H),sys/ipc.h)
endif

ifndef $(HAVE_SYS_MOUNT_H)
HAVE_SYS_MOUNT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/mount.h have_header_h)
ifeq ($(HAVE_SYS_MOUNT_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_MOUNT_H
endif
$(call using,$(HAVE_SYS_MOUNT_H),sys/mount.h)
endif

ifndef $(HAVE_SYS_MSG_H)
HAVE_SYS_MSG_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/msg.h have_header_h)
ifeq ($(HAVE_SYS_MSG_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_MSG_H
endif
$(call using,$(HAVE_SYS_MSG_H),sys/msg.h)
endif

ifndef $(HAVE_SYS_PARAM_H)
HAVE_SYS_PARAM_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/param.h have_header_h)
ifeq ($(HAVE_SYS_PARAM_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_PARAM_H
endif
$(call using,$(HAVE_SYS_PARAM_H),sys/param.h)
endif

ifndef $(HAVE_SYS_PERSONALITY_H)
HAVE_SYS_PERSONALITY_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/personality.h have_header_h)
ifeq ($(HAVE_SYS_PERSONALITY_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_PERSONALITY_H
endif
$(call using,$(HAVE_SYS_PERSONALITY_H),sys/personality.h)
endif

ifndef $(HAVE_SYS_PLATFORM_PPC_H)
HAVE_SYS_PLATFORM_PPC_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/platform/ppc.h have_header_h)
ifeq ($(HAVE_SYS_PLATFORM_PPC_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_PLATFORM_PPC_H
$(call using,$(HAVE_SYS_PLATFORM_PPC_H),sys/platform/ppc.h)
endif
endif

ifndef $(HAVE_SYS_PRCTL_H)
HAVE_SYS_PRCTL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/prctl.h have_header_h)
ifeq ($(HAVE_SYS_PRCTL_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_PRCTL_H
endif
$(call using,$(HAVE_SYS_PRCTL_H),sys/prctl.h)
endif

ifndef $(HAVE_SYS_TREE_H)
HAVE_SYS_TREE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/tree.h have_header_h)
ifeq ($(HAVE_SYS_TREE_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_TREE_H
endif
$(call using,$(HAVE_SYS_TREE_H),sys/tree.h)
endif

ifndef $(HAVE_SYS_QUEUE_H)
HAVE_SYS_QUEUE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/queue.h have_header_h)
ifeq ($(HAVE_SYS_QUEUE_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_QUEUE_H
endif
$(call using,$(HAVE_SYS_QUEUE_H),sys/queue.h)
endif

ifndef $(HAVE_SYS_QUOTA_H)
HAVE_SYS_QUOTA_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/quota.h have_header_h)
ifeq ($(HAVE_SYS_QUOTA_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_QUOTA_H
endif
$(call using,$(HAVE_SYS_QUOTA_H),sys/quota.h)
endif

ifndef $(HAVE_SYS_SELECT_H)
HAVE_SYS_SELECT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/select.h have_header_h)
ifeq ($(HAVE_SYS_SELECT_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SELECT_H
endif
$(call using,$(HAVE_SYS_SELECT_H),sys/select.h)
endif

ifndef $(HAVE_SYS_SENDFILE_H)
HAVE_SYS_SENDFILE_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/sendfile.h have_header_h)
ifeq ($(HAVE_SYS_SENDFILE_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SENDFILE_H
endif
$(call using,$(HAVE_SYS_SENDFILE_H),sys/sendfile.h)
endif

ifndef $(HAVE_SYS_SHM_H)
HAVE_SYS_SHM_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/shm.h have_header_h)
ifeq ($(HAVE_SYS_SHM_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SHM_H
endif
$(call using,$(HAVE_SYS_SHM_H),sys/shm.h)
endif

ifndef $(HAVE_SYS_SIGNALFD_H)
HAVE_SYS_SIGNALFD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/signalfd.h have_header_h)
ifeq ($(HAVE_SYS_SIGNALFD_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SIGNALFD_H
endif
$(call using,$(HAVE_SYS_SIGNALFD_H),sys/signalfd.h)
endif

ifndef $(HAVE_SYS_STATFS_H)
HAVE_SYS_STATFS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/statfs.h have_header_h)
ifeq ($(HAVE_SYS_STATFS_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_STATFS_H
endif
$(call using,$(HAVE_SYS_STATFS_H),sys/statfs.h)
endif

ifndef $(HAVE_SYS_STATVFS_H)
HAVE_SYS_STATVFS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/statvfs.h have_header_h)
ifeq ($(HAVE_SYS_STATVFS_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_STATVFS_H
endif
$(call using,$(HAVE_SYS_STATVFS_H),sys/statvfs.h)
endif

ifndef $(HAVE_SYS_SWAP_H)
HAVE_SYS_SWAP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/swap.h have_header_h)
ifeq ($(HAVE_SYS_SWAP_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SWAP_H
endif
$(call using,$(HAVE_SYS_SWAP_H),sys/swap.h)
endif

ifndef $(HAVE_SYSCALL_H)
HAVE_SYSCALL_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/syscall.h have_header_h)
ifeq ($(HAVE_SYSCALL_H),1)
	CONFIG_CFLAGS += -DHAVE_SYSCALL_H
endif
$(call using,$(HAVE_SYSCALL_H),sys/syscall.h)
endif

ifndef $(HAVE_SYS_SYSINFO_H)
HAVE_SYS_SYSINFO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/sysinfo.h have_header_h)
ifeq ($(HAVE_SYS_SYSINFO_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SYSINFO_H
endif
$(call using,$(HAVE_SYS_SYSINFO_H),sys/sysinfo.h)
endif

ifndef $(HAVE_SYS_SYSMACROS_H)
HAVE_SYS_SYSMACROS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/sysmacros.h have_header_h)
ifeq ($(HAVE_SYS_SYSMACROS_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_SYSMACROS_H
endif
$(call using,$(HAVE_SYS_SYSMACROS_H),sys/sysmacros.h)
endif

ifndef $(HAVE_SYS_TIMERFD_H)
HAVE_SYS_TIMERFD_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/timerfd.h have_header_h)
ifeq ($(HAVE_SYS_TIMERFD_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_TIMERFD_H
endif
$(call using,$(HAVE_SYS_TIMERFD_H),sys/timerfd.h)
endif

ifndef $(HAVE_SYS_TIMEX_H)
HAVE_SYS_TIMEX_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/timex.h have_header_h)
ifeq ($(HAVE_SYS_TIMEX_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_TIMEX_H
endif
$(call using,$(HAVE_SYS_TIMEX_H),sys/timex.h)
endif

ifndef $(HAVE_SYS_UIO_H)
HAVE_SYS_UIO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/uio.h have_header_h)
ifeq ($(HAVE_SYS_UIO_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_UIO_H
endif
$(call using,$(HAVE_SYS_UIO_H),sys/uio.h)
endif

ifndef $(HAVE_SYS_UCRED_H)
HAVE_SYS_UCRED_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/ucred.h have_header_h)
ifeq ($(HAVE_SYS_UCRED_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_UCRED_H
endif
$(call using,$(HAVE_SYS_UCRED_H),sys/ucred.h)
endif

ifndef $(HAVE_SYS_UN_H)
HAVE_SYS_UN_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/un.h have_header_h)
ifeq ($(HAVE_SYS_UN_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_UN_H
endif
$(call using,$(HAVE_SYS_UN_H),sys/un.h)
endif

ifndef $(HAVE_SYS_UTSNAME_H)
HAVE_SYS_UTSNAME_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/utsname.h have_header_h)
ifeq ($(HAVE_SYS_UTSNAME_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_UTSNAME_H
endif
$(call using,$(HAVE_SYS_UTSNAME_H),sys/utsname.h)
endif

ifndef $(HAVE_SYS_VFS_H)
HAVE_SYS_VFS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/vfs.h have_header_h)
ifeq ($(HAVE_SYS_VFS_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_VFS_H
endif
$(call using,$(HAVE_SYS_VFS_H),sys/vfs.h)
endif

ifndef $(HAVE_SYS_XATTR_H)
HAVE_SYS_XATTR_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=sys/xattr.h have_header_h)
ifeq ($(HAVE_SYS_XATTR_H),1)
	CONFIG_CFLAGS += -DHAVE_SYS_XATTR_H
endif
$(call using,$(HAVE_SYS_XATTR_H),sys/xattr.h)
endif

ifndef $(HAVE_TERMIO_H)
HAVE_TERMIO_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=termio.h have_header_h)
ifeq ($(HAVE_TERMIO_H),1)
	CONFIG_CFLAGS += -DHAVE_TERMIO_H
endif
$(call using,$(HAVE_TERMIO_H),termio.h)
endif

ifndef $(HAVE_TERMIOS_H)
HAVE_TERMIOS_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=termios.h have_header_h)
ifeq ($(HAVE_TERMIOS_H),1)
	CONFIG_CFLAGS += -DHAVE_TERMIOS_H
endif
$(call using,$(HAVE_TERMIOS_H),termios.h)
endif

ifndef $(HAVE_NET_IF_H)
HAVE_NET_IF_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=net/if.h have_header_h)
ifeq ($(HAVE_NET_IF_H),1)
	CONFIG_CFLAGS += -DHAVE_NET_IF_H
endif
$(call using,$(HAVE_NET_IF_H),net/if.h)
endif

ifndef $(HAVE_NETINET_IP_H)
HAVE_NETINET_IP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=netinet/ip.h have_header_h)
ifeq ($(HAVE_NETINET_IP_H),1)
	CONFIG_CFLAGS += -DHAVE_NETINET_IP_H
endif
$(call using,$(HAVE_NETINET_IP_H),netinet/ip.h)
endif

ifndef $(HAVE_NETINET_IP_ICMP_H)
HAVE_NETINET_IP_ICMP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=netinet/ip_icmp.h have_header_h)
ifeq ($(HAVE_NETINET_IP_ICMP_H),1)
	CONFIG_CFLAGS += -DHAVE_NETINET_IP_ICMP_H
endif
$(call using,$(HAVE_NETINET_IP_ICMP_H),netinet/ip_icmp.h)
endif

ifndef $(HAVE_NETINET_SCTP_H)
HAVE_NETINET_SCTP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=netinet/sctp.h have_header_h)
ifeq ($(HAVE_NETINET_SCTP_H),1)
	CONFIG_CFLAGS += -DHAVE_NETINET_SCTP_H
endif
$(call using,$(HAVE_NETINET_SCTP_H),netinet/sctp.h)
endif

ifndef $(HAVE_NETINET_TCP_H)
HAVE_NETINET_TCP_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=netinet/tcp.h have_header_h)
ifeq ($(HAVE_NETINET_TCP_H),1)
	CONFIG_CFLAGS += -DHAVE_NETINET_TCP_H
endif
$(call using,$(HAVE_NETINET_TCP_H),netinet/tcp.h)
endif

ifndef $(HAVE_UCONTEXT_H)
HAVE_UCONTEXT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=ucontext.h have_header_h)
ifeq ($(HAVE_UCONTEXT_H),1)
	CONFIG_CFLAGS += -DHAVE_UCONTEXT_H
endif
$(call using,$(HAVE_UCONTEXT_H),ucontext.h)
endif

ifndef $(HAVE_USTAT_H)
HAVE_USTAT_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=ustat.h have_header_h)
ifeq ($(HAVE_USTAT_H),1)
	CONFIG_CFLAGS += -DHAVE_USTAT_H
endif
$(call using,$(HAVE_USTAT_H),ustat.h (deprecated))
endif

ifndef $(HAVE_UTIME_H)
HAVE_UTIME_H = $(shell $(MAKE) $(MAKE_OPTS) HEADER=utime.h have_header_h)
ifeq ($(HAVE_UTIME_H),1)
	CONFIG_CFLAGS += -DHAVE_UTIME_H
endif
$(call using,$(HAVE_UTIME_H),utime.h)
endif


$(call check,CPU and compiler features)

ifndef $(HAVE_ALIGNED_64)
HAVE_ALIGNED_64 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-aligned-64 have_test_prog)
ifeq ($(HAVE_ALIGNED_64),1)
	CONFIG_CFLAGS += -DHAVE_ALIGNED_64
endif
$(call using,$(HAVE_ALIGNED_64),64 byte alignment attribute)
endif

ifndef $(HAVE_ALIGNED_128)
HAVE_ALIGNED_128 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-aligned-128 have_test_prog)
ifeq ($(HAVE_ALIGNED_128),1)
	CONFIG_CFLAGS += -DHAVE_ALIGNED_128
endif
$(call using,$(HAVE_ALIGNED_128),128 byte alignment attribute)
endif

ifndef $(HAVE_ALIGNED_64K)
HAVE_ALIGNED_64K = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-aligned-64K have_test_prog)
ifeq ($(HAVE_ALIGNED_64K),1)
	CONFIG_CFLAGS += -DHAVE_ALIGNED_64K
endif
$(call using,$(HAVE_ALIGNED_64K),64K alignment attribute)
endif

ifndef $(HAVE_ATOMIC_ADD_FETCH)
HAVE_ATOMIC_ADD_FETCH = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-atomic_add_fetch have_test_prog)
ifeq ($(HAVE_ATOMIC_ADD_FETCH),1)
	CONFIG_CFLAGS += -DHAVE_ATOMIC_ADD_FETCH
endif
$(call using,$(HAVE_ATOMIC_ADD_FETCH),__atomic_add_fetch)
endif

ifndef $(HAVE_ATOMIC_FETCH_ADD_2)
HAVE_ATOMIC_FETCH_ADD_2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-atomic_fetch_add_2 have_test_prog)
ifeq ($(HAVE_ATOMIC_FETCH_ADD_2),1)
	CONFIG_CFLAGS += -DHAVE_ATOMIC_FETCH_ADD_2
endif
$(call using,$(HAVE_ATOMIC_FETCH_ADD_2),__atomic_fetch_add_2)
endif

ifndef $(HAVE_ATOMIC_FETCH_ADD_4)
HAVE_ATOMIC_FETCH_ADD_4 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-atomic_fetch_add_4 have_test_prog)
ifeq ($(HAVE_ATOMIC_FETCH_ADD_4),1)
	CONFIG_CFLAGS += -DHAVE_ATOMIC_FETCH_ADD_4
endif
$(call using,$(HAVE_ATOMIC_FETCH_ADD_4),__atomic_fetch_add_4)
endif

ifndef $(HAVE_ATOMIC_FETCH_ADD_8)
HAVE_ATOMIC_FETCH_ADD_8 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-atomic_fetch_add_8 have_test_prog)
ifeq ($(HAVE_ATOMIC_FETCH_ADD_8),1)
	CONFIG_CFLAGS += -DHAVE_ATOMIC_FETCH_ADD_8
endif
$(call using,$(HAVE_ATOMIC_FETCH_ADD_8),__atomic_fetch_add_8)
endif

ifndef $(HAVE_ATOMIC)
HAVE_ATOMIC = $(shell $(MAKE) $(MAKE_OPTS) have_atomic)
ifeq ($(HAVE_ATOMIC),1)
	CONFIG_CFLAGS += -DHAVE_ATOMIC
	CONFIG_LDFLAGS += $(LIB_ATOMIC)
endif
$(call using,$(HAVE_ATOMIC),atomics with $(LIB_ATOMIC))
endif

ifndef $(HAVE_ATTRIBUTE_FALLTHROUGH)
HAVE_ATTRIBUTE_FALLTHROUGH = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-attr-fallthrough have_test_prog)
ifeq ($(HAVE_ATTRIBUTE_FALLTHROUGH),1)
	CONFIG_CFLAGS += -DHAVE_ATTRIBUTE_FALLTHROUGH
endif
$(call using,$(HAVE_ATTRIBUTE_FALLTHROUGH),__attribute__((fallthrough)))
endif

ifndef $(HAVE_ASM_DARN)
HAVE_ASM_DARN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-darn have_test_prog)
ifeq ($(HAVE_ASM_DARN),1)
	CONFIG_CFLAGS += -DHAVE_ASM_DARN
endif
$(call using,$(HAVE_ASM_DARN),darn instruction (power9))
endif

ifndef $(HAVE_LABEL_AS_VALUE)
HAVE_LABEL_AS_VALUE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-label-as-value have_test_prog)
ifeq ($(HAVE_LABEL_AS_VALUE),1)
	CONFIG_CFLAGS += -DHAVE_LABEL_AS_VALUE
endif
$(call using,$(HAVE_LABEL_AS_VALUE),label as value feature)
endif

ifndef $(HAVE_ASM_NOP)
HAVE_ASM_NOP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-nop have_test_prog)
ifeq ($(HAVE_ASM_NOP),1)
	CONFIG_CFLAGS += -DHAVE_ASM_NOP
endif
$(call using,$(HAVE_ASM_NOP),nop instruction)
endif

ifndef $(HAVE_ASM_NOTHING)
HAVE_ASM_NOTHING = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-nothing have_test_prog)
ifeq ($(HAVE_ASM_NOTHING),1)
	CONFIG_CFLAGS += -DHAVE_ASM_NOTHING
endif
$(call using,$(HAVE_ASM_NOTHING),asm(""))
endif

ifndef $(HAVE_ASM_PAUSE)
HAVE_ASM_PAUSE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-pause have_test_prog)
ifeq ($(HAVE_ASM_PAUSE),1)
	CONFIG_CFLAGS += -DHAVE_ASM_PAUSE
endif
$(call using,$(HAVE_ASM_PAUSE),pause instruction (x86))
endif

ifndef $(HAVE_ASM_RDRAND)
HAVE_ASM_RDRAND = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-rdrand have_test_prog)
ifeq ($(HAVE_ASM_RDRAND),1)
	CONFIG_CFLAGS += -DHAVE_ASM_RDRAND
endif
$(call using,$(HAVE_ASM_RDRAND),rdrand instruction (x86))
endif

ifndef $(HAVE___RESTRICT)
HAVE___RESTRICT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-__restrict have_test_prog)
ifeq ($(HAVE___RESTRICT),1)
	CONFIG_CFLAGS += -DHAVE___RESTRICT
endif
$(call using,$(HAVE___RESTRICT),__restrict keyword)
endif

ifndef $(HAVE_ASM_YIELD)
HAVE_ASM_YIELD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-asm-yield have_test_prog)
ifeq ($(HAVE_ASM_YIELD),1)
	CONFIG_CFLAGS += -DHAVE_ASM_YIELD
endif
$(call using,$(HAVE_ASM_YIELD),yield instruction (ARM))
endif

ifndef $(HAVE_TARGET_CLONES)
HAVE_TARGET_CLONES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-target-clones have_test_prog)
ifeq ($(HAVE_TARGET_CLONES),1)
	CONFIG_CFLAGS += -DHAVE_TARGET_CLONES
endif
$(call using,$(HAVE_TARGET_CLONES),target_clones attribute)
endif

ifndef $(HAVE_VECMATH)
HAVE_VECMATH = $(shell $(MAKE) $(MAKE_OPTS) have_vecmath)
ifeq ($(HAVE_VECMATH),1)
	CONFIG_CFLAGS += -DHAVE_VECMATH
endif
$(call using,$(HAVE_VECMATH),vector math)
endif

ifndef $(HAVE_VLA_ARG)
HAVE_VLA_ARG = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vla-arg have_test_prog)
ifeq ($(HAVE_VLA_ARG),1)
	CONFIG_CFLAGS += -DHAVE_VLA_ARG
endif
$(call using,$(HAVE_VLA_ARG),variable length array function args)
endif


$(call check,types)

ifndef $(HAVE_COMPLEX)
HAVE_COMPLEX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-complex have_test_prog)
ifeq ($(HAVE_COMPLEX),1)
	CONFIG_CFLAGS += -DHAVE_COMPLEX
endif
$(call using,$(HAVE_COMPLEX),complex)
endif

ifndef $(HAVE_DADDR_T)
HAVE_DADDR_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-daddr_t have_test_prog)
ifeq ($(HAVE_DADDR_T),1)
	CONFIG_CFLAGS += -DHAVE_DADDR_T
endif
$(call using,$(HAVE_DADDR_T),daddr_t)
endif

ifndef $(HAVE_DVD_AUTHINFO)
HAVE_DVD_AUTHINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-dvd_authinfo have_test_prog)
ifeq ($(HAVE_DVD_AUTHINFO),1)
	CONFIG_CFLAGS += -DHAVE_DVD_AUTHINFO
endif
$(call using,$(HAVE_DVD_AUTHINFO),dvd_authinfo)
endif

ifndef $(HAVE_DVD_STRUCT)
HAVE_DVD_STRUCT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-dvd_struct have_test_prog)
ifeq ($(HAVE_DVD_STRUCT),1)
	CONFIG_CFLAGS += -DHAVE_DVD_STRUCT
endif
$(call using,$(HAVE_DVD_STRUCT),dvd_struct)
endif

ifndef $(HAVE_FLOAT_DECIMAL32)
HAVE_FLOAT_DECIMAL32 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=_Decimal32 have_float)
ifeq ($(HAVE_FLOAT_DECIMAL32),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT_DECIMAL32
endif
$(call using,$(HAVE_FLOAT_DECIMAL32),float decimal32)
endif

ifndef $(HAVE_FLOAT_DECIMAL64)
HAVE_FLOAT_DECIMAL64 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=_Decimal64 have_float)
ifeq ($(HAVE_FLOAT_DECIMAL64),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT_DECIMAL64
endif
$(call using,$(HAVE_FLOAT_DECIMAL64),float decimal64)
endif

ifndef $(HAVE_FLOAT_DECIMAL128)
HAVE_FLOAT_DECIMAL128 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=_Decimal128 have_float)
ifeq ($(HAVE_FLOAT_DECIMAL128),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT_DECIMAL128
endif
$(call using,$(HAVE_FLOAT_DECIMAL128),float decimal128)
endif

ifndef $(HAVE_FLOAT16)
HAVE_FLOAT16 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=__fp16 have_float)
ifeq ($(HAVE_FLOAT16),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT16
endif
$(call using,$(HAVE_FLOAT16),float16)
endif

ifndef $(HAVE_FLOAT32)
HAVE_FLOAT32 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=_Float32 have_float)
ifeq ($(HAVE_FLOAT32),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT32
endif
$(call using,$(HAVE_FLOAT32),float32)
endif

ifndef $(HAVE_FLOAT64)
HAVE_FLOAT64 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=_Float64 have_float)
ifeq ($(HAVE_FLOAT64),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT64
endif
$(call using,$(HAVE_FLOAT64),float64)
endif

ifndef $(HAVE_FLOAT80)
HAVE_FLOAT80 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=__float80 have_float)
ifeq ($(HAVE_FLOAT80),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT80
endif
$(call using,$(HAVE_FLOAT80),float80)
endif

ifndef $(HAVE_FLOAT128)
HAVE_FLOAT128 = $(shell $(MAKE) $(MAKE_OPTS) FLOAT_TYPE=__float128 have_float)
ifeq ($(HAVE_FLOAT128),1)
	CONFIG_CFLAGS += -DHAVE_FLOAT128
endif
$(call using,$(HAVE_FLOAT128),float128)
endif

ifndef $(HAVE_INO64_T)
HAVE_INO64_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ino64_t have_test_prog)
ifeq ($(HAVE_INO64_T),1)
	CONFIG_CFLAGS += -DHAVE_INO64_T
endif
$(call using,$(HAVE_INO64_T),ino64_t)
endif

ifndef $(HAVE_INT128_T)
HAVE_INT128_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-int128_t have_test_prog)
ifeq ($(HAVE_INT128_T),1)
	CONFIG_CFLAGS += -DHAVE_INT128_T
endif
$(call using,$(HAVE_INT128_T),int128_t support)
endif

ifndef $(HAVE_KERNEL_LONG_T)
HAVE_KERNEL_LONG_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kernel_long_t have_test_prog)
ifeq ($(HAVE_KERNEL_LONG_T),1)
	CONFIG_CFLAGS += -DHAVE_KERNEL_LONG_T
endif
$(call using,$(HAVE_KERNEL_LONG_T),__kernel_long_t)
endif

ifndef $(HAVE_KERNEL_ULONG_T)
HAVE_KERNEL_ULONG_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kernel_ulong_t have_test_prog)
ifeq ($(HAVE_KERNEL_ULONG_T),1)
	CONFIG_CFLAGS += -DHAVE_KERNEL_ULONG_T
endif
$(call using,$(HAVE_KERNEL_ULONG_T),__kernel_ulong_t)
endif

ifndef $(HAVE_LANDLOCK_RULE_TYPE)
HAVE_LANDLOCK_RULE_TYPE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-landlock_rule_type have_test_prog)
ifeq ($(HAVE_LANDLOCK_RULE_TYPE),1)
	CONFIG_CFLAGS += -DHAVE_LANDLOCK_RULE_TYPE
endif
$(call using,$(HAVE_LANDLOCK_RULE_TYPE),landlock_rule_type)
endif

ifndef $(HAVE_LOFF_T)
HAVE_LOFF_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-loff_t have_test_prog)
ifeq ($(HAVE_LOFF_T),1)
	CONFIG_CFLAGS += -DHAVE_LOFF_T
endif
$(call using,$(HAVE_LOFF_T),loff_t)
endif

ifndef $(HAVE_MODE_T)
HAVE_MODE_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mode_t have_test_prog)
ifeq ($(HAVE_MODE_T),1)
	CONFIG_CFLAGS += -DHAVE_MODE_T
endif
$(call using,$(HAVE_MODE_T),mode_t)
endif

ifndef $(HAVE_OFF_T)
HAVE_OFF_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-off_t have_test_prog)
ifeq ($(HAVE_OFF_T),1)
	CONFIG_CFLAGS += -DHAVE_OFF_T
endif
$(call using,$(HAVE_OFF_T),off_t)
endif

ifndef $(HAVE_OFF64_T)
HAVE_OFF64_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-off64_t have_test_prog)
ifeq ($(HAVE_OFF64_T),1)
	CONFIG_CFLAGS += -DHAVE_OFF64_T
endif
$(call using,$(HAVE_OFF64_T),off64_t)
endif

ifndef $(HAVE_PTHREAD_MUTEXATTR_T)
HAVE_PTHREAD_MUTEXATTR_T = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pthread-mutexattr_t  have_test_prog)
ifeq ($(HAVE_PTHREAD_MUTEXATTR_T),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_MUTEXATTR_T
endif
$(call using,$(HAVE_PTHREAD_MUTEXATTR_T),pthread_mutexattr_t)
endif

ifndef $(HAVE_CDROM_BLK)
HAVE_CDROM_BLK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_blk have_test_prog)
ifeq ($(HAVE_CDROM_BLK),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_BLK
endif
$(call using,$(HAVE_CDROM_BLK),struct cdrom_blk)
endif

ifndef $(HAVE_CDROM_MCN)
HAVE_CDROM_MCN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_mcn have_test_prog)
ifeq ($(HAVE_CDROM_MCN),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_MCN
endif
$(call using,$(HAVE_CDROM_MCN),struct cdrom_mcn)
endif

ifndef $(HAVE_CDROM_MSF)
HAVE_CDROM_MSF = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_msf have_test_prog)
ifeq ($(HAVE_CDROM_MSF),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_MSF
endif
$(call using,$(HAVE_CDROM_MSF),struct cdrom_msf)
endif

ifndef $(HAVE_CDROM_READ_AUDIO)
HAVE_CDROM_READ_AUDIO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_read_audio have_test_prog)
ifeq ($(HAVE_CDROM_READ_AUDIO),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_READ_AUDIO
endif
$(call using,$(HAVE_CDROM_READ_AUDIO),struct cdrom_read_audio)
endif

ifndef $(HAVE_CDROM_SUBCHNL)
HAVE_CDROM_SUBCHNL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_subchnl have_test_prog)
ifeq ($(HAVE_CDROM_SUBCHNL),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_SUBCHNL
endif
$(call using,$(HAVE_CDROM_SUBCHNL),struct cdrom_subchnl)
endif

ifndef $(HAVE_CDROM_TI)
HAVE_CDROM_TI = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_ti have_test_prog)
ifeq ($(HAVE_CDROM_TI),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_TI
endif
$(call using,$(HAVE_CDROM_TI),struct cdrom_ti)
endif

ifndef $(HAVE_CDROM_TOCENTRY)
HAVE_CDROM_TOCENTRY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_tocentry have_test_prog)
ifeq ($(HAVE_CDROM_TOCENTRY),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_TOCENTRY
endif
$(call using,$(HAVE_CDROM_TOCENTRY),struct cdrom_tocentry)
endif

ifndef $(HAVE_CDROM_TOCHDR)
HAVE_CDROM_TOCHDR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_tochdr have_test_prog)
ifeq ($(HAVE_CDROM_TOCHDR),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_TOCHDR
endif
$(call using,$(HAVE_CDROM_TOCHDR),struct cdrom_tochdr)
endif

ifndef $(HAVE_CDROM_VOLCTRL)
HAVE_CDROM_VOLCTRL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cdrom_volctrl have_test_prog)
ifeq ($(HAVE_CDROM_VOLCTRL),1)
	CONFIG_CFLAGS += -DHAVE_CDROM_VOLCTRL
endif
$(call using,$(HAVE_CDROM_VOLCTRL),struct cdrom_volctrl)
endif

ifndef $(HAVE_CONSOLEFONTDESC)
HAVE_CONSOLEFONTDESC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-consolefontdesc have_test_prog)
ifeq ($(HAVE_CONSOLEFONTDESC),1)
	CONFIG_CFLAGS += -DHAVE_CONSOLEFONTDESC
endif
$(call using,$(HAVE_CONSOLEFONTDESC),struct consolefontdesc)
endif

ifndef $(HAVE_FLOPPY_FDC_STATE)
HAVE_FLOPPY_FDC_STATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-floppy_fdc_state have_test_prog)
ifeq ($(HAVE_FLOPPY_FDC_STATE),1)
	CONFIG_CFLAGS += -DHAVE_FLOPPY_FDC_STATE
endif
$(call using,$(HAVE_FLOPPY_FDC_STATE),struct floppy_fdc_state)
endif

ifndef $(HAVE_FLOPPY_DRIVE_STRUCT)
HAVE_FLOPPY_DRIVE_STRUCT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-floppy_drive_struct have_test_prog)
ifeq ($(HAVE_FLOPPY_DRIVE_STRUCT),1)
	CONFIG_CFLAGS += -DHAVE_FLOPPY_DRIVE_STRUCT
endif
$(call using,$(HAVE_FLOPPY_DRIVE_STRUCT),struct floppy_drive_struct)
endif

ifndef $(HAVE_FLOPPY_STRUCT)
HAVE_FLOPPY_STRUCT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-floppy_struct have_test_prog)
ifeq ($(HAVE_FLOPPY_STRUCT),1)
	CONFIG_CFLAGS += -DHAVE_FLOPPY_STRUCT
endif
$(call using,$(HAVE_FLOPPY_STRUCT),struct floppy_struct)
endif

ifndef $(HAVE_DM_IOCTL)
HAVE_DM_IOCTL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-dm_ioctl have_test_prog)
ifeq ($(HAVE_DM_IOCTL),1)
	CONFIG_CFLAGS += -DHAVE_DM_IOCTL
endif
$(call using,$(HAVE_DM_IOCTL),struct dm_ioctl)
endif

ifndef $(HAVE_FSVERITY_DIGEST)
HAVE_FSVERITY_DIGEST = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fsverity_digest have_test_prog)
ifeq ($(HAVE_FSVERITY_DIGEST),1)
	CONFIG_CFLAGS += -DHAVE_FSVERITY_DIGEST
endif
$(call using,$(HAVE_FSVERITY_DIGEST),struct fsverity_digest)
endif

ifndef $(HAVE_FSVERITY_ENABLE_ARG)
HAVE_FSVERITY_ENABLE_ARG = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fsverity_enable_arg have_test_prog)
ifeq ($(HAVE_FSVERITY_ENABLE_ARG),1)
	CONFIG_CFLAGS += -DHAVE_FSVERITY_ENABLE_ARG
endif
$(call using,$(HAVE_FSVERITY_ENABLE_ARG),struct fsverity_enable_arg)
endif

ifndef $(HAVE_IFCONF)
HAVE_IFCONF = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ifconf have_test_prog)
ifeq ($(HAVE_IFCONF),1)
	CONFIG_CFLAGS += -DHAVE_IFCONF
endif
$(call using,$(HAVE_IFCONF),struct ifconf)
endif

ifndef $(HAVE_ICMPHDR)
HAVE_ICMPHDR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-icmphdr have_test_prog)
ifeq ($(HAVE_ICMPHDR),1)
	CONFIG_CFLAGS += -DHAVE_ICMPHDR
endif
$(call using,$(HAVE_ICMPHDR),struct iphdr and icmphdr)
endif

ifndef $(HAVE_KBDIACRS)
HAVE_KBDIACRS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kbdiacrs have_test_prog)
ifeq ($(HAVE_KBDIACRS),1)
	CONFIG_CFLAGS += -DHAVE_KBDIACRS
endif
$(call using struct,$(HAVE_KBDIACRS),struct kbdiacrs)
endif

ifndef $(HAVE_KBENTRY)
HAVE_KBENTRY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kbentry have_test_prog)
ifeq ($(HAVE_KBENTRY),1)
	CONFIG_CFLAGS += -DHAVE_KBENTRY
endif
$(call using,$(HAVE_KBENTRY),struct kbentry)
endif

ifndef $(HAVE_KBKEYCODE)
HAVE_KBKEYCODE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kbkeycode have_test_prog)
ifeq ($(HAVE_KBKEYCODE),1)
	CONFIG_CFLAGS += -DHAVE_KBKEYCODE
endif
$(call using,$(HAVE_KBKEYCODE),struct kbkeycode)
endif

ifndef $(HAVE_KBSENTRY)
HAVE_KBSENTRY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-kbsentry have_test_prog)
ifeq ($(HAVE_KBSENTRY),1)
	CONFIG_CFLAGS += -DHAVE_KBSENTRY
endif
$(call using,$(HAVE_KBSENTRY),struct kbsentry)
endif

ifndef $(HAVE_LANDLOCK_RULESET_ATTR)
HAVE_LANDLOCK_RULESET_ATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-landlock_ruleset_attr have_test_prog)
ifeq ($(HAVE_LANDLOCK_RULESET_ATTR),1)
	CONFIG_CFLAGS += -DHAVE_LANDLOCK_RULESET_ATTR
endif
$(call using,$(HAVE_LANDLOCK_RULESET_ATTR),struct landlock_ruleset_attr)
endif

ifndef $(HAVE_MEDIA_DEVICE_INFO)
HAVE_MEDIA_DEVICE_INFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-media_device_info have_test_prog)
ifeq ($(HAVE_MEDIA_DEVICE_INFO),1)
	CONFIG_CFLAGS += -DHAVE_MEDIA_DEVICE_INFO
endif
$(call using,$(HAVE_MEDIA_DEVICE_INFO),struct media_device_info)
endif

ifndef $(HAVE_MSGINFO)
HAVE_MSGINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-msginfo have_test_prog)
ifeq ($(HAVE_MSGINFO),1)
	CONFIG_CFLAGS += -DHAVE_MSGINFO
endif
$(call using,$(HAVE_MSGINFO),struct msginfo)
endif

ifndef $(HAVE_MTRR_GENTRY)
HAVE_MTRR_GENTRY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mtrr_gentry have_test_prog)
ifeq ($(HAVE_MTRR_GENTRY),1)
	CONFIG_CFLAGS += -DHAVE_MTRR_GENTRY
endif
$(call using,$(HAVE_MTRR_GENTRY),struct mtrr_gentry)
endif

ifndef $(HAVE_OPEN_HOW)
HAVE_OPEN_HOW = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-open_how have_test_prog)
ifeq ($(HAVE_OPEN_HOW),1)
	CONFIG_CFLAGS += -DHAVE_OPEN_HOW
endif
$(call using,$(HAVE_OPEN_HOW),struct open_how)
endif

ifndef $(HAVE_RUSAGE_RU_MINFLT)
HAVE_RUSAGE_RU_MINFLT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-rusage_ru_minflt have_test_prog)
ifeq ($(HAVE_RUSAGE_RU_MINFLT),1)
	CONFIG_CFLAGS += -DHAVE_RUSAGE_RU_MINFLT
endif
$(call using,$(HAVE_RUSAGE_RU_MINFLT),struct rusage.ru_minflt)
endif

ifndef $(HAVE_RUSAGE_RU_NVCSW)
HAVE_RUSAGE_RU_NVCSW = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-rusage_ru_nvcsw have_test_prog)
ifeq ($(HAVE_RUSAGE_RU_NVCSW),1)
	CONFIG_CFLAGS += -DHAVE_RUSAGE_RU_NVCSW
endif
$(call using,$(HAVE_RUSAGE_RU_NVCSW),struct rusage.ru_nvcsw)
endif

ifndef $(HAVE_SECCOMP_NOTIF_SIZES)
HAVE_SECCOMP_NOTIF_SIZES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-seccomp_notif_sizes have_test_prog)
ifeq ($(HAVE_SECCOMP_NOTIF_SIZES),1)
	CONFIG_CFLAGS += -DHAVE_SECCOMP_NOTIF_SIZES
endif
$(call using,$(HAVE_SECCOMP_NOTIF_SIZES),struct seccomp_notif_sizes)
endif

ifndef $(HAVE_SERIAL_ICOUNTER)
HAVE_SERIAL_ICOUNTER = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-serial-icounter have_test_prog)
ifeq ($(HAVE_SERIAL_ICOUNTER),1)
	CONFIG_CFLAGS += -DHAVE_SERIAL_ICOUNTER
endif
$(call using,$(HAVE_SERIAL_ICOUNTER),struct serial_icounter_struct)
endif

ifndef $(HAVE_SERIAL_STRUCT)
HAVE_SERIAL_STRUCT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-serial-struct have_test_prog)
ifeq ($(HAVE_SERIAL_STRUCT),1)
	CONFIG_CFLAGS += -DHAVE_SERIAL_STRUCT
endif
$(call using,$(HAVE_SERIAL_STRUCT),struct serial_struct)
endif

ifndef $(HAVE_SHMID_DS)
HAVE_SHMID_DS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-shmid-ds have_test_prog)
ifeq ($(HAVE_SHMID_DS),1)
	CONFIG_CFLAGS += -DHAVE_SHMID_DS
endif
$(call using,$(HAVE_SHMID_DS),struct shmid_ds)
endif

ifndef $(HAVE_SHMINFO)
HAVE_SHMINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-shminfo have_test_prog)
ifeq ($(HAVE_SHMINFO),1)
	CONFIG_CFLAGS += -DHAVE_SHMINFO
endif
$(call using,$(HAVE_SHMINFO),struct shminfo)
endif

ifndef $(HAVE_SND_CTL_CARD_INFO)
HAVE_SND_CTL_CARD_INFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-snd_ctl_card_info have_test_prog)
ifeq ($(HAVE_SND_CTL_CARD_INFO),1)
	CONFIG_CFLAGS += -DHAVE_SND_CTL_CARD_INFO
endif
$(call using,$(HAVE_SND_CTL_CARD_INFO),struct snd_ctl_card_info)
endif

ifndef $(HAVE_SND_CTL_TLV)
HAVE_SND_CTL_TLV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-snd_ctl_tlv have_test_prog)
ifeq ($(HAVE_SND_CTL_TLV),1)
	CONFIG_CFLAGS += -DHAVE_SND_CTL_TLV
endif
$(call using,$(HAVE_SND_CTL_TLV),struct snd_ctl_tlv)
endif

ifndef $(HAVE_SOCKADDR_UN)
HAVE_SOCKADDR_UN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sockaddr_un have_test_prog)
ifeq ($(HAVE_SOCKADDR_UN),1)
	CONFIG_CFLAGS += -DHAVE_SOCKADDR_UN
endif
$(call using,$(HAVE_SOCKADDR_UN),struct sockaddr_un)
endif

ifndef $(HAVE_TERMIOS)
HAVE_TERMIOS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-termios have_test_prog)
ifeq ($(HAVE_TERMIOS),1)
	CONFIG_CFLAGS += -DHAVE_TERMIOS
endif
$(call using,$(HAVE_TERMIOS),struct termios)
endif

ifndef $(HAVE_UNIMAPDESC)
HAVE_UNIMAPDESC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-unimapdesc have_test_prog)
ifeq ($(HAVE_UNIMAPDESC),1)
	CONFIG_CFLAGS += -DHAVE_UNIMAPDESC
endif
$(call using,$(HAVE_UNIMAPDESC),struct unimapdesc)
endif

ifndef $(HAVE_USER_DESC)
HAVE_USER_DESC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-user-desc have_test_prog)
ifeq ($(HAVE_USER_DESC),1)
	CONFIG_CFLAGS += -DHAVE_USER_DESC
endif
$(call using,$(HAVE_USER_DESC),struct user_desc)
endif

ifndef $(HAVE_VT_CONSIZE)
HAVE_VT_CONSIZE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vt_consize have_test_prog)
ifeq ($(HAVE_VT_CONSIZE),1)
	CONFIG_CFLAGS += -DHAVE_VT_CONSIZE
endif
$(call using,$(HAVE_VT_CONSIZE),struct vt_consize)
endif

ifndef $(HAVE_VT_MODE)
HAVE_VT_MODE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vt_mode have_test_prog)
ifeq ($(HAVE_VT_MODE),1)
	CONFIG_CFLAGS += -DHAVE_VT_MODE
endif
$(call using,$(HAVE_VT_MODE),struct vt_mode)
endif

ifndef $(HAVE_VT_SIZES)
HAVE_VT_SIZES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vt_sizes have_test_prog)
ifeq ($(HAVE_VT_SIZES),1)
	CONFIG_CFLAGS += -DHAVE_VT_SIZES
endif
$(call using,$(HAVE_VT_SIZES),struct vt_sizes)
endif

ifndef $(HAVE_VT_STAT)
HAVE_VT_STAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vt_stat have_test_prog)
ifeq ($(HAVE_VT_STAT),1)
	CONFIG_CFLAGS += -DHAVE_VT_STAT
endif
$(call using,$(HAVE_VT_STAT),struct vt_stat)
endif

ifndef $(HAVE_V4L2_AUDIO)
HAVE_V4L2_AUDIO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_audio have_test_prog)
ifeq ($(HAVE_V4L2_AUDIO),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_AUDIO
endif
$(call using,$(HAVE_V4L2_AUDIO),struct v4l2_audio)
endif

ifndef $(HAVE_V4L2_AUDIOOUT)
HAVE_V4L2_AUDIOOUT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_audioout have_test_prog)
ifeq ($(HAVE_V4L2_AUDIOOUT),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_AUDIOOUT
endif
$(call using,$(HAVE_V4L2_AUDIOOUT),struct v4l2_audioout)
endif

ifndef $(HAVE_V4L2_CAPABILITY)
HAVE_V4L2_CAPABILITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_capability have_test_prog)
ifeq ($(HAVE_V4L2_CAPABILITY),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_CAPABILITY
endif
$(call using,$(HAVE_V4L2_CAPABILITY),struct v4l2_capability)
endif

ifndef $(HAVE_V4L2_DV_TIMINGS)
HAVE_V4L2_DV_TIMINGS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_dv_timings have_test_prog)
ifeq ($(HAVE_V4L2_DV_TIMINGS),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_DV_TIMINGS
endif
$(call using,$(HAVE_V4L2_DV_TIMINGS),struct v4l2_dv_timings)
endif

ifndef $(HAVE_V4L2_ENC_IDX)
HAVE_V4L2_ENC_IDX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_enc_idx  have_test_prog)
ifeq ($(HAVE_V4L2_ENC_IDX),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_ENC_IDX
endif
$(call using,$(HAVE_V4L2_ENC_IDX),struct v4l2_enc_idx)
endif

ifndef $(HAVE_V4L2_FRAMEBUFFER)
HAVE_V4L2_FRAMEBUFFER = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_framebuffer have_test_prog)
ifeq ($(HAVE_V4L2_FRAMEBUFFER),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_FRAMEBUFFER
endif
$(call using,$(HAVE_V4L2_FRAMEBUFFER),struct v4l2_framebuffer)
endif

ifndef $(HAVE_V4L2_JPEGCOMPRESSION)
HAVE_V4L2_JPEGCOMPRESSION = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_jpegcompression have_test_prog)
ifeq ($(HAVE_V4L2_JPEGCOMPRESSION),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_JPEGCOMPRESSION
endif
$(call using,$(HAVE_V4L2_JPEGCOMPRESSION),struct v4l2_jpegcompression)
endif

ifndef $(HAVE_V4L2_STD_ID)
HAVE_V4L2_STD_ID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-v4l2_std_id have_test_prog)
ifeq ($(HAVE_V4L2_STD_ID),1)
	CONFIG_CFLAGS += -DHAVE_V4L2_STD_ID
endif
$(call using,$(HAVE_V4L2_STD_ID),type v4l2_std_id)
endif

ifndef $(HAVE_WINSIZE)
HAVE_WINSIZE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-winsize have_test_prog)
ifeq ($(HAVE_WINSIZE),1)
	CONFIG_CFLAGS += -DHAVE_WINSIZE
endif
$(call using,$(HAVE_WINSIZE),struct winsize)
endif


$(call check,functions and system calls)

ifndef $(HAVE_ACCEPT4)
HAVE_ACCEPT4 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-accept4 have_test_prog)
ifeq ($(HAVE_ACCEPT4),1)
	CONFIG_CFLAGS += -DHAVE_ACCEPT4
endif
$(call using,$(HAVE_ACCEPT4),accept4)
endif

ifndef $(HAVE_ADJTIME)
HAVE_ADJTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-adjtime have_test_prog)
ifeq ($(HAVE_ADJTIME),1)
	CONFIG_CFLAGS += -DHAVE_ADJTIME
endif
$(call using,$(HAVE_ADJTIME),adjtime)
endif

ifndef $(HAVE_ADJTIMEX)
HAVE_ADJTIMEX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-adjtimex have_test_prog)
ifeq ($(HAVE_ADJTIMEX),1)
	CONFIG_CFLAGS += -DHAVE_ADJTIMEX
endif
$(call using,$(HAVE_ADJTIMEX),adjtimex)
endif

ifndef $(HAVE_AFFINITY)
HAVE_AFFINITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-affinity have_test_prog)
ifeq ($(HAVE_AFFINITY),1)
	CONFIG_CFLAGS += -DHAVE_AFFINITY
endif
$(call using,$(HAVE_AFFINITY),affinity scheduling CPU masks)
endif

ifndef $(HAVE_AIO_CANCEL)
HAVE_AIO_CANCEL = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-aio-cancel have_test_prog)
ifeq ($(HAVE_AIO_CANCEL),1)
	CONFIG_CFLAGS += -DHAVE_AIO_CANCEL
endif
$(call using,$(HAVE_AIO_CANCEL),aio_cancel)
endif

ifndef $(HAVE_AIO_FSYNC)
HAVE_AIO_FSYNC = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-aio-fsync have_test_prog)
ifeq ($(HAVE_AIO_FSYNC),1)
	CONFIG_CFLAGS += -DHAVE_AIO_FSYNC
endif
$(call using,$(HAVE_AIO_FSYNC),aio_fsync)
endif

ifndef $(HAVE_AIO_READ)
HAVE_AIO_READ = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-aio-read have_test_prog)
ifeq ($(HAVE_AIO_READ),1)
	CONFIG_CFLAGS += -DHAVE_AIO_READ
endif
$(call using,$(HAVE_AIO_READ),aio_read)
endif

ifndef $(HAVE_AIO_WRITE)
HAVE_AIO_WRITE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-aio-write have_test_prog)
ifeq ($(HAVE_AIO_WRITE),1)
	CONFIG_CFLAGS += -DHAVE_AIO_WRITE
endif
$(call using,$(HAVE_AIO_WRITE),aio_write)
endif

ifndef $(HAVE_ARCH_PRCTL)
HAVE_ARCH_PRCTL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-arch_prctl have_test_prog)
ifeq ($(HAVE_ARCH_PRCTL),1)
	CONFIG_CFLAGS += -DHAVE_ARCH_PRCTL
endif
$(call using,$(HAVE_ARCH_PRCTL),arch_prctl)
endif

ifndef $(HAVE_BRK)
HAVE_BRK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-brk have_test_prog)
ifeq ($(HAVE_BRK),1)
	CONFIG_CFLAGS += -DHAVE_BRK
endif
$(call using,$(HAVE_BRK),brk)
endif

ifndef $(HAVE_BUILTIN___CLEAR_CACHE)
HAVE_BUILTIN___CLEAR_CACHE= $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-__clear_cache have_test_prog)
ifeq ($(HAVE_BUILTIN___CLEAR_CACHE),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN___CLEAR_CACHE
endif
$(call using,$(HAVE_BUILTIN___CLEAR_CACHE),__builtin___clear_cache)
endif

ifndef $(HAVE_BUILTIN_CABSL)
MATHFUNC=__builtin_cabsl
export MATHFUNC
HAVE_BUILTIN_CABSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_cabsl have_mathfunc)
ifeq ($(HAVE_BUILTIN_CABSL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CABSL
endif
$(call using,$(HAVE_BUILTIN_CABSL),__builtin_cabsl)
endif

ifndef $(HAVE_BUILTIN_CCOSL)
MATHFUNC=__builtin_ccosl
export MATHFUNC
HAVE_BUILTIN_CCOSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_ccosl have_mathfunc)
ifeq ($(HAVE_BUILTIN_CCOSL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CCOSL
endif
$(call using,$(HAVE_BUILTIN_CCOSL),__builtin_ccosl)
endif

ifndef $(HAVE_BUILTIN_COS)
MATHFUNC=__builtin_cos
export MATHFUNC
HAVE_BUILTIN_COS = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_cos have_mathfunc)
ifeq ($(HAVE_BUILTIN_COS),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_COS
endif
$(call using,$(HAVE_BUILTIN_COS),__builtin_cos)
endif

ifndef $(HAVE_BUILTIN_COSF)
MATHFUNC=__builtin_cosf
export MATHFUNC
HAVE_BUILTIN_COSF = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_cosf have_mathfunc)
ifeq ($(HAVE_BUILTIN_COSF),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_COSF
endif
$(call using,$(HAVE_BUILTIN_COSL),__builtin_cosf)
endif

ifndef $(HAVE_BUILTIN_COSL)
MATHFUNC=__builtin_cosl
export MATHFUNC
HAVE_BUILTIN_COSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_cosl have_mathfunc)
ifeq ($(HAVE_BUILTIN_COSL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_COSL
endif
$(call using,$(HAVE_BUILTIN_COSL),__builtin_cosl)
endif

ifndef $(HAVE_BUILTIN_COSHL)
MATHFUNC=__builtin_coshl
export MATHFUNC
HAVE_BUILTIN_COSHL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_coshl have_mathfunc)
ifeq ($(HAVE_BUILTIN_COSHL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_COSHL
endif
$(call using,$(HAVE_BUILTIN_COSL),__builtin_coshl)
endif

ifndef $(HAVE_BUILTIN_CPOW)
MATHFUNC=__builtin_cpow_
export MATHFUNC
HAVE_BUILTIN_CPOW = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_cpow have_mathfunc)
ifeq ($(HAVE_BUILTIN_CPOW),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CPOW
endif
$(call using,$(HAVE_BUILTIN_CPOW),__builtin_cpow)
endif

ifndef $(HAVE_BUILTIN_CSINF)
MATHFUNC=__builtin_csinf
export MATHFUNC
HAVE_BUILTIN_CSINF = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_csinf have_mathfunc)
ifeq ($(HAVE_BUILTIN_CSINF),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CSINF
endif
$(call using,$(HAVE_BUILTIN_CSINF),__builtin_csinf)
endif

ifndef $(HAVE_BUILTIN_CSINL)
MATHFUNC=__builtin_csinl
export MATHFUNC
HAVE_BUILTIN_CSINL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_csinl have_mathfunc)
ifeq ($(HAVE_BUILTIN_CSINL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CSINL
endif
$(call using,$(HAVE_BUILTIN_CSINL),__builtin_csinl)
endif

ifndef $(HAVE_BUILTIN_CTZ)
HAVE_BUILTIN_CTZ = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-ctz have_test_prog)
ifeq ($(HAVE_BUILTIN_CTZ),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CTZ
endif
$(call using,$(HAVE_BUILTIN_CTZ),__builtin_ctz)
endif

ifndef $(HAVE_BUILTIN_CPU_IS_POWER9)
HAVE_BUILTIN_CPU_IS_POWER9 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-cpu-is-power9 have_test_prog)
ifeq ($(HAVE_BUILTIN_CPU_IS_POWER9),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_CPU_IS_POWER9
endif
$(call using,$(HAVE_BUILTIN_CPU_IS_POWER9),__builtin_cpu_is("power9"))
endif

ifndef $(HAVE_BUILTIN_EXP)
MATHFUNC=__builtin_exp
export MATHFUNC
HAVE_BUILTIN_EXP = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_exp have_mathfunc)
ifeq ($(HAVE_BUILTIN_EXP),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_EXP
endif
$(call using,$(HAVE_BUILTIN_EXP),__builtin_exp)
endif

ifndef $(HAVE_BUILTIN_EXPECT)
HAVE_BUILTIN_EXPECT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-expect have_test_prog)
ifeq ($(HAVE_BUILTIN_EXPECT),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_EXPECT
endif
$(call using,$(HAVE_BUILTIN_EXPECT),__builtin_expect)
endif

ifndef $(HAVE_BUILTIN_EXPL)
MATHFUNC=__builtin_expl
export MATHFUNC
HAVE_BUILTIN_EXPL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_expl have_mathfunc)
ifeq ($(HAVE_BUILTIN_EXPL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_EXPL
endif
$(call using,$(HAVE_BUILTIN_EXPL),__builtin_expl)
endif

ifndef $(HAVE_BUILTIN_FABS)
HAVE_BUILTIN_FABS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-fabs TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_FABS),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_FABS
endif
$(call using,$(HAVE_BUILTIN_FABS),__builtin_fabs)
endif

ifndef $(HAVE_BUILTIN_FABSL)
HAVE_BUILTIN_FABSL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-fabsl TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_FABSL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_FABSL
endif
$(call using,$(HAVE_BUILTIN_FABSL),__builtin_fabsl)
endif

ifndef $(HAVE_BUILTIN_LGAMMAL)
MATHFUNC=__builtin_cabsl
export MATHFUNC
HAVE_BUILTIN_LGAMMAL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_lgammal have_mathfunc)
ifeq ($(HAVE_BUILTIN_LGAMMAL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_LGAMMAL
endif
$(call using,$(HAVE_BUILTIN_LGAMMAL),__builtin_lgammal)
endif

ifndef $(HAVE_BUILTIN_LOG)
MATHFUNC=__builtin_log
export MATHFUNC
HAVE_BUILTIN_LOG = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_log have_mathfunc)
ifeq ($(HAVE_BUILTIN_LOG),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_LOG
endif
$(call using,$(HAVE_BUILTIN_LOG),__builtin_log)
endif

ifndef $(HAVE_BUILTIN_LOGL)
MATHFUNC=__builtin_logl
export MATHFUNC
HAVE_BUILTIN_LOGL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_log have_mathfunc)
ifeq ($(HAVE_BUILTIN_LOGL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_LOGL
endif
$(call using,$(HAVE_BUILTIN_LOGL),__builtin_logl)
endif

ifndef $(HAVE_BUILTIN_MEMCPY)
HAVE_BUILTIN_MEMCPY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-memcpy have_test_prog)
ifeq ($(HAVE_BUILTIN_MEMCPY),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_MEMCPY
endif
$(call using,$(HAVE_BUILTIN_MEMCPY),__builtin_memcpy)
endif

ifndef $(HAVE_BUILTIN_MEMMOVE)
HAVE_BUILTIN_MEMMOVE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-memmove have_test_prog)
ifeq ($(HAVE_BUILTIN_MEMMOVE),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_MEMMOVE
endif
$(call using,$(HAVE_BUILTIN_MEMMOVE),__builtin_memmove)
endif

ifndef $(HAVE_BUILTIN_PARITY)
HAVE_BUILTIN_PARITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-parity have_test_prog)
ifeq ($(HAVE_BUILTIN_PARITY),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_PARITY
endif
$(call using,$(HAVE_BUILTIN_PARITY),__builtin_parity)
endif

ifndef $(HAVE_BUILTIN_POW)
MATHFUNC=__builtin_pow_
export MATHFUNC
HAVE_BUILTIN_POW = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_pow have_mathfunc)
ifeq ($(HAVE_BUILTIN_POW),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_POW
endif
$(call using,$(HAVE_BUILTIN_POW),__builtin_pow)
endif

ifndef $(HAVE_BUILTIN_PREFETCH)
HAVE_BUILTIN_PREFETCH = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-prefetch have_test_prog)
ifeq ($(HAVE_BUILTIN_PREFETCH),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_PREFETCH
endif
$(call using,$(HAVE_BUILTIN_PREFETCH),__builtin_prefetch)
endif

ifndef $(HAVE_BUILTIN_RINT)
HAVE_BUILTIN_RINT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-rint TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_RINT),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_RINT
endif
$(call using,$(HAVE_BUILTIN_RINT),__builtin_rint)
endif

ifndef $(HAVE_BUILTIN_RINTL)
HAVE_BUILTIN_RINTL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-rintl TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_RINTL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_RINTL
endif
$(call using,$(HAVE_BUILTIN_RINTL),__builtin_rintl)
endif

ifndef $(HAVE_BUILTIN_SFENCE)
HAVE_BUILTIN_SFENCE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-sfence have_test_prog)
ifeq ($(HAVE_BUILTIN_SFENCE),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SFENCE
endif
$(call using,$(HAVE_BUILTIN_SFENCE),__builtin_ia32_sfence)
endif

ifndef $(HAVE_BUILTIN_SIN)
MATHFUNC=__builtin_sin
export MATHFUNC
HAVE_BUILTIN_SIN = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_sin have_mathfunc)
ifeq ($(HAVE_BUILTIN_SIN),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SIN
endif
$(call using,$(HAVE_BUILTIN_SIN),__builtin_sin)
endif

ifndef $(HAVE_BUILTIN_SINHL)
MATHFUNC=__builtin_sinhl
export MATHFUNC
HAVE_BUILTIN_SINHL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_sinhl have_mathfunc)
ifeq ($(HAVE_BUILTIN_SINHL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SINHL
endif
$(call using,$(HAVE_BUILTIN_SINHL),__builtin_sinhl)
endif

ifndef $(HAVE_BUILTIN_SINF)
MATHFUNC=__builtin_sinf
export MATHFUNC
HAVE_BUILTIN_SINF = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_sinf have_mathfunc)
ifeq ($(HAVE_BUILTIN_SINF),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SINF
endif
$(call using,$(HAVE_BUILTIN_SINL),__builtin_sinf)
endif

ifndef $(HAVE_BUILTIN_SINL)
MATHFUNC=__builtin_sinl
export MATHFUNC
HAVE_BUILTIN_SINL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=__builtin_sinl have_mathfunc)
ifeq ($(HAVE_BUILTIN_SINL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SINL
endif
$(call using,$(HAVE_BUILTIN_SINL),__builtin_sinl)
endif

ifndef $(HAVE_BUILTIN_SQRT)
MATHFUNC=__builtin_sqrt
export MATHFUNC
HAVE_BUILTIN_SQRT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-sqrt TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_SQRT),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SQRT
endif
$(call using,$(HAVE_BUILTIN_SQRT),__builtin_sqrt)
endif

ifndef $(HAVE_BUILTIN_SQRTL)
MATHFUNC=__builtin_sqrtl
export MATHFUNC
HAVE_BUILTIN_SQRTL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-builtin-sqrtl TEST_LIBS=$(LIB_MATH) have_test_prog)
ifeq ($(HAVE_BUILTIN_SQRTL),1)
	CONFIG_CFLAGS += -DHAVE_BUILTIN_SQRTL
endif
$(call using,$(HAVE_BUILTIN_SQRTL),__builtin_sqrtl)
endif

ifndef $(HAVE_CABSL)
MATHFUNC=cabsl
export MATHFUNC
HAVE_CABSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=cabsl have_mathfunc)
ifeq ($(HAVE_CABSL),1)
	CONFIG_CFLAGS += -DHAVE_CABSL
endif
$(call using,$(HAVE_CABSL),cabsl)
endif

ifndef $(HAVE_CCOSF)
MATHFUNC=ccosf
export MATHFUNC
HAVE_CCOSF = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=ccosf have_mathfunc)
ifeq ($(HAVE_CCOSF),1)
	CONFIG_CFLAGS += -DHAVE_CCOSF
endif
$(call using,$(HAVE_CCOSF),ccosf)
endif

ifndef $(HAVE_CCOSL)
MATHFUNC=ccosl
export MATHFUNC
HAVE_CCOSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=ccosl have_mathfunc)
ifeq ($(HAVE_CCOSL),1)
	CONFIG_CFLAGS += -DHAVE_CCOSL
endif
$(call using,$(HAVE_CCOSL),ccosl)
endif

ifndef $(HAVE_CHROOT)
HAVE_CHROOT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-chroot have_test_prog)
ifeq ($(HAVE_CHROOT),1)
	CONFIG_CFLAGS += -DHAVE_CHROOT
endif
$(call using,$(HAVE_CHROOT),chroot)
endif

ifndef $(HAVE_CIMAG)
MATHFUNC=cimag
export MATHFUNC
HAVE_CIMAG = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=cimag have_mathfunc)
ifeq ($(HAVE_CIMAG),1)
	CONFIG_CFLAGS += -DHAVE_CIMAG
endif
$(call using,$(HAVE_CIMAG),cimag)
endif

ifndef $(HAVE_CRYPT_R)
HAVE_CRYPT_R = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-crypt-r TEST_LIBS='$(CONFIG_LDFLAGS)' have_test_prog)
ifeq ($(HAVE_CRYPT_R),1)
	CONFIG_CFLAGS += -DHAVE_CRYPT_R
endif
$(call using,$(HAVE_CRYPT_R),crypt_r)
endif

ifndef $(HAVE_CLEARENV)
HAVE_CLEARENV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clearenv have_test_prog)
ifeq ($(HAVE_CLEARENV),1)
	CONFIG_CFLAGS += -DHAVE_CLEARENV
endif
$(call using,$(HAVE_CLEARENV),clearenv)
endif

ifndef $(HAVE_CLOCK_GETRES)
HAVE_CLOCK_GETRES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clock-getres have_test_prog)
ifeq ($(HAVE_CLOCK_GETRES),1)
	CONFIG_CFLAGS += -DHAVE_CLOCK_GETRES
endif
$(call using,$(HAVE_CLOCK_GETRES),clock_getres)
endif

ifndef $(HAVE_CLOCK_GETTIME)
HAVE_CLOCK_GETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clock-gettime have_test_prog)
ifeq ($(HAVE_CLOCK_GETTIME),1)
	CONFIG_CFLAGS += -DHAVE_CLOCK_GETTIME
endif
$(call using,$(HAVE_CLOCK_GETTIME),clock_gettime)
endif

ifndef $(HAVE_CLOCK_NANOSLEEP)
HAVE_CLOCK_NANOSLEEP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clock-nanosleep have_test_prog)
ifeq ($(HAVE_CLOCK_NANOSLEEP),1)
	CONFIG_CFLAGS += -DHAVE_CLOCK_NANOSLEEP
endif
$(call using,$(HAVE_CLOCK_NANOSLEEP),clock_nanosleep)
endif

ifndef $(HAVE_CLOCK_SETTIME)
HAVE_CLOCK_SETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clock-settime have_test_prog)
ifeq ($(HAVE_CLOCK_SETTIME),1)
	CONFIG_CFLAGS += -DHAVE_CLOCK_SETTIME
endif
$(call using,$(HAVE_CLOCK_SETTIME),clock_settime)
endif

ifndef $(HAVE_CLONE)
HAVE_CLONE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-clone have_test_prog)
ifeq ($(HAVE_CLONE),1)
	CONFIG_CFLAGS += -DHAVE_CLONE
endif
$(call using,$(HAVE_CLONE),clone)
endif

ifndef $(HAVE_COPY_FILE_RANGE)
HAVE_COPY_FILE_RANGE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-copy-file-range have_test_prog)
ifeq ($(HAVE_COPY_FILE_RANGE),1)
	CONFIG_CFLAGS += -DHAVE_COPY_FILE_RANGE
endif
$(call using,$(HAVE_COPY_FILE_RANGE),copy_file_range)
endif

ifndef $(HAVE_COSHL)
MATHFUNC=coshl
export MATHFUNC
HAVE_COSHL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=coshl have_mathfunc)
ifeq ($(HAVE_COSHL),1)
	CONFIG_CFLAGS += -DHAVE_COSHL
endif
$(call using,$(HAVE_COSHL),coshl)
endif

ifndef $(HAVE_COSL)
MATHFUNC=cosl
export MATHFUNC
HAVE_COSL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=cosl have_mathfunc)
ifeq ($(HAVE_COSL),1)
	CONFIG_CFLAGS += -DHAVE_COSL
endif
$(call using,$(HAVE_COSL),cosl)
endif

ifndef $(HAVE_CPOW)
MATHFUNC=cpow
export MATHFUNC
HAVE_CPOW = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=cpow have_mathfunc)
ifeq ($(HAVE_CPOW),1)
	CONFIG_CFLAGS += -DHAVE_CPOW
endif
$(call using,$(HAVE_CPOW),cpow)
endif

ifndef $(HAVE_CPUID)
HAVE_CPUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-cpuid have_test_prog)
ifeq ($(HAVE_CPUID),1)
	CONFIG_CFLAGS += -DHAVE_CPUID
endif
$(call using,$(HAVE_CPUID),cpuid)
endif

ifndef $(HAVE_CREAL)
MATHFUNC=creal
export MATHFUNC
HAVE_CREAL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=creal have_mathfunc)
ifeq ($(HAVE_CREAL),1)
	CONFIG_CFLAGS += -DHAVE_CREAL
endif
$(call using,$(HAVE_CREAL),creal)
endif

ifndef $(HAVE_CSINL)
MATHFUNC=csinl
export MATHFUNC
HAVE_CSINL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=csinl have_mathfunc)
ifeq ($(HAVE_CSINL),1)
	CONFIG_CFLAGS += -DHAVE_CSINL
endif
$(call using,$(HAVE_CSINL),csinl)
endif

ifndef $(HAVE_DUP3)
HAVE_DUP3 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-dup3 have_test_prog)
ifeq ($(HAVE_DUP3),1)
	CONFIG_CFLAGS += -DHAVE_DUP3
endif
$(call using,$(HAVE_DUP3),dup3)
endif

ifndef $(HAVE_ENDPWENT)
HAVE_ENDPWENT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-endpwent have_test_prog)
ifeq ($(HAVE_ENDPWENT),1)
	CONFIG_CFLAGS += -DHAVE_ENDPWENT
endif
$(call using,$(HAVE_ENDPWENT),endpwent)
endif

ifndef $(HAVE_EPOLL_CREATE)
HAVE_EPOLL_CREATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-epoll-create have_test_prog)
ifeq ($(HAVE_EPOLL_CREATE),1)
	CONFIG_CFLAGS += -DHAVE_EPOLL_CREATE
endif
$(call using,$(HAVE_EPOLL_CREATE),epoll_create)
endif

ifndef $(HAVE_EPOLL_CREATE1)
HAVE_EPOLL_CREATE1 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-epoll-create1 have_test_prog)
ifeq ($(HAVE_EPOLL_CREATE1),1)
	CONFIG_CFLAGS += -DHAVE_EPOLL_CREATE1
endif
$(call using,$(HAVE_EPOLL_CREATE1),epoll_create1)
endif

ifndef $(HAVE_EVENTFD)
HAVE_EVENTFD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-eventfd have_test_prog)
ifeq ($(HAVE_EVENTFD),1)
	CONFIG_CFLAGS += -DHAVE_EVENTFD
endif
$(call using,$(HAVE_EVENTFD),eventfd)
endif

ifndef $(HAVE_EXECVEAT)
HAVE_EXECVEAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-execveat have_test_prog)
ifeq ($(HAVE_EXECVEAT),1)
	CONFIG_CFLAGS += -DHAVE_EXECVEAT
endif
$(call using,$(HAVE_EXECVEAT),execveat)
endif

ifndef $(HAVE_EXPL)
MATHFUNC=expl
export MATHFUNC
HAVE_EXPL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=expl have_mathfunc)
ifeq ($(HAVE_EXPL),1)
	CONFIG_CFLAGS += -DHAVE_EXPL
endif
$(call using,$(HAVE_EXPL),expl)
endif

ifndef $(HAVE_EXECUTABLE_START)
HAVE_EXECUTABLE_START= $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-executable_start have_test_prog)
ifeq ($(HAVE_EXECUTABLE_START),1)
	CONFIG_CFLAGS += -DHAVE_EXECUTABLE_START
endif
$(call using,$(HAVE_EXECUTABLE_START),__executable_start)
endif

ifndef $(HAVE_FACCESSAT)
HAVE_FACCESSAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-faccessat have_test_prog)
ifeq ($(HAVE_FACCESSAT),1)
	CONFIG_CFLAGS += -DHAVE_FACCESSAT
endif
$(call using,$(HAVE_FACCESSAT),faccessat)
endif

ifndef $(HAVE_FACCESSAT2)
HAVE_FACCESSAT2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-faccessat2 have_test_prog)
ifeq ($(HAVE_FACCESSAT2),1)
	CONFIG_CFLAGS += -DHAVE_FACCESSAT2
endif
$(call using,$(HAVE_FACCESSAT2),faccessat2)
endif

ifndef $(HAVE_FALLOCATE)
HAVE_FALLOCATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fallocate have_test_prog)
ifeq ($(HAVE_FALLOCATE),1)
	CONFIG_CFLAGS += -DHAVE_FALLOCATE
endif
$(call using,$(HAVE_FALLOCATE),fallocate)
endif

ifndef $(HAVE_FANOTIFY)
HAVE_FANOTIFY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fanotify have_test_prog)
ifeq ($(HAVE_FANOTIFY),1)
	CONFIG_CFLAGS += -DHAVE_FANOTIFY
endif
$(call using,$(HAVE_FANOTIFY),fanotify)
endif

ifndef $(HAVE_FCHMODAT)
HAVE_FCHMODAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fchmodat have_test_prog)
ifeq ($(HAVE_FCHMODAT),1)
	CONFIG_CFLAGS += -DHAVE_FCHMODAT
endif
$(call using,$(HAVE_FCHMODAT),fchmodat)
endif

ifndef $(HAVE_FCHOWNAT)
HAVE_FCHOWNAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fchownat have_test_prog)
ifeq ($(HAVE_FCHOWNAT),1)
	CONFIG_CFLAGS += -DHAVE_FCHOWNAT
endif
$(call using,$(HAVE_FCHOWNAT),fchownat)
endif

ifndef $(HAVE_FDATASYNC)
HAVE_FDATASYNC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fdatasync have_test_prog)
ifeq ($(HAVE_FDATASYNC),1)
	CONFIG_CFLAGS += -DHAVE_FDATASYNC
endif
$(call using,$(HAVE_FDATASYNC),fdatasync)
endif

ifndef $(HAVE_FGETXATTR)
HAVE_FGETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fgetxattr have_test_prog)
ifeq ($(HAVE_FGETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_FGETXATTR
endif
$(call using,$(HAVE_FGETXATTR),fgetxattr)
endif

ifndef $(HAVE_FLISTXATTR)
HAVE_FLISTXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-flistxattr have_test_prog)
ifeq ($(HAVE_FLISTXATTR),1)
	CONFIG_CFLAGS += -DHAVE_FLISTXATTR
endif
$(call using,$(HAVE_FLISTXATTR),flistxattr)
endif

ifndef $(HAVE_FLOCK)
HAVE_FLOCK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-flock have_test_prog)
ifeq ($(HAVE_FLOCK),1)
	CONFIG_CFLAGS += -DHAVE_FLOCK
endif
$(call using,$(HAVE_FLOCK),flock)
endif

ifndef $(HAVE_FREMOVEXATTR)
HAVE_FREMOVEXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fremovexattr have_test_prog)
ifeq ($(HAVE_FREMOVEXATTR),1)
	CONFIG_CFLAGS += -DHAVE_FREMOVEXATTR
endif
$(call using,$(HAVE_FREMOVEXATTR),fremovexattr)
endif

ifndef $(HAVE_FSETXATTR)
HAVE_FSETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fsetxattr have_test_prog)
ifeq ($(HAVE_FSETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_FSETXATTR
endif
$(call using,$(HAVE_FSETXATTR),fsetxattr)
endif

ifndef $(HAVE_FSYNC)
HAVE_FSYNC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-fsync have_test_prog)
ifeq ($(HAVE_FSYNC),1)
	CONFIG_CFLAGS += -DHAVE_FSYNC
endif
$(call using,$(HAVE_FSYNC),fsync)
endif

ifndef $(HAVE_FUTIMENS)
HAVE_FUTIMENS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-futimens have_test_prog)
ifeq ($(HAVE_FUTIMENS),1)
	CONFIG_CFLAGS += -DHAVE_FUTIMENS
endif
$(call using,$(HAVE_FUTIMENS),futimens)
endif

ifndef $(HAVE_FUTIMES)
HAVE_FUTIMES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-futimes have_test_prog)
ifeq ($(HAVE_FUTIMES),1)
	CONFIG_CFLAGS += -DHAVE_FUTIMES
endif
$(call using,$(HAVE_FUTIMES),futimes)
endif

ifndef $(HAVE_FUTIMESAT)
HAVE_FUTIMESAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-futimesat have_test_prog)
ifeq ($(HAVE_FUTIMESAT),1)
	CONFIG_CFLAGS += -DHAVE_FUTIMESAT
endif
$(call using,$(HAVE_FUTIMESAT),futimesat)
endif

ifndef $(HAVE___GET_CPUID)
HAVE___GET_CPUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-__get_cpuid have_test_prog)
ifeq ($(HAVE___GET_CPUID),1)
	CONFIG_CFLAGS += -DHAVE___GET_CPUID
endif
$(call using,$(HAVE___GET_CPUID),__get_cpuid)
endif

ifndef $(HAVE_GETAUXVAL)
HAVE_GETAUXVAL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getauxval have_test_prog)
ifeq ($(HAVE_GETAUXVAL),1)
	CONFIG_CFLAGS += -DHAVE_GETAUXVAL
endif
$(call using,$(HAVE_GETAUXVAL),getauxval)
endif

ifndef $(HAVE_GETDOMAINNAME)
HAVE_GETDOMAINNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getdomainname have_test_prog)
ifeq ($(HAVE_GETDOMAINNAME),1)
	CONFIG_CFLAGS += -DHAVE_GETDOMAINNAME
endif
$(call using,$(HAVE_GETDOMAINNAME),getdomainname)
endif

ifndef $(HAVE_GETDTABLESIZE)
HAVE_GETDTABLESIZE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getdtablesize have_test_prog)
ifeq ($(HAVE_GETDTABLESIZE),1)
	CONFIG_CFLAGS += -DHAVE_GETDTABLESIZE
endif
$(call using,$(HAVE_GETDTABLESIZE),getdtablesize)
endif

ifndef $(HAVE_GETHOSTNAME)
HAVE_GETHOSTNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-gethostname have_test_prog)
ifeq ($(HAVE_GETHOSTNAME),1)
	CONFIG_CFLAGS += -DHAVE_GETHOSTNAME
endif
$(call using,$(HAVE_GETHOSTNAME),gethostname)
endif

ifndef $(HAVE_GETHOSTID)
HAVE_GETHOSTID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-gethostid have_test_prog)
ifeq ($(HAVE_GETHOSTID),1)
	CONFIG_CFLAGS += -DHAVE_GETHOSTID
endif
$(call using,$(HAVE_GETHOSTID),gethostid)
endif

ifndef $(HAVE_GETMNTENT)
HAVE_GETMNTENT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getmntent have_test_prog)
ifeq ($(HAVE_GETMNTENT),1)
	CONFIG_CFLAGS += -DHAVE_GETMNTENT
endif
$(call using,$(HAVE_GETMNTENT),getmntent)
endif

ifndef $(HAVE_GETMNTINFO)
HAVE_GETMNTINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getmntinfo have_test_prog)
ifeq ($(HAVE_GETMNTINFO),1)
	CONFIG_CFLAGS += -DHAVE_GETMNTINFO
endif
$(call using,$(HAVE_GETMNTINFO),getmntinfo)
endif

ifndef $(HAVE_GETPAGESIZE)
HAVE_GETPAGESIZE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getpagesize have_test_prog)
ifeq ($(HAVE_GETPAGESIZE),1)
	CONFIG_CFLAGS += -DHAVE_GETPAGESIZE
endif
$(call using,$(HAVE_GETPAGESIZE),getpagesize)
endif

ifndef $(HAVE_GETPGID)
HAVE_GETPGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getpgid have_test_prog)
ifeq ($(HAVE_GETPGID),1)
	CONFIG_CFLAGS += -DHAVE_GETPGID
endif
$(call using,$(HAVE_GETPGID),getpgid)
endif

ifndef $(HAVE_GETPGRP)
HAVE_GETPGRP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getpgrp have_test_prog)
ifeq ($(HAVE_GETPGRP),1)
	CONFIG_CFLAGS += -DHAVE_GETPGRP
endif
$(call using,$(HAVE_GETPGRP),getpgrp)
endif

ifndef $(HAVE_GETPRIORITY)
HAVE_GETPRIORITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getpriority have_test_prog)
ifeq ($(HAVE_GETPRIORITY),1)
	CONFIG_CFLAGS += -DHAVE_GETPRIORITY
endif
$(call using,$(HAVE_GETPRIORITY),getpriority)
endif

ifndef $(HAVE_GETPWENT)
HAVE_GETPWENT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getpwent have_test_prog)
ifeq ($(HAVE_GETPWENT),1)
	CONFIG_CFLAGS += -DHAVE_GETPWENT
endif
$(call using,$(HAVE_GETPWENT),getpwent)
endif

ifndef $(HAVE_GETRESGID)
HAVE_GETRESGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getresgid have_test_prog)
ifeq ($(HAVE_GETRESGID),1)
	CONFIG_CFLAGS += -DHAVE_GETRESGID
endif
$(call using,$(HAVE_GETRESGID),getresgid)
endif

ifndef $(HAVE_GETRESUID)
HAVE_GETRESUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getresuid have_test_prog)
ifeq ($(HAVE_GETRESUID),1)
	CONFIG_CFLAGS += -DHAVE_GETRESUID
endif
$(call using,$(HAVE_GETRESUID),getresuid)
endif

ifndef $(HAVE_GETRUSAGE)
HAVE_GETRUSAGE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getrusage have_test_prog)
ifeq ($(HAVE_GETRUSAGE),1)
	CONFIG_CFLAGS += -DHAVE_GETRUSAGE
endif
$(call using,$(HAVE_GETRUSAGE),getrusage)
endif

ifndef $(HAVE_GETSID)
HAVE_GETSID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getsid have_test_prog)
ifeq ($(HAVE_GETSID),1)
	CONFIG_CFLAGS += -DHAVE_GETSID
endif
$(call using,$(HAVE_GETSID),getsid)
endif

ifndef $(HAVE_GETXATTR)
HAVE_GETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-getxattr have_test_prog)
ifeq ($(HAVE_GETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_GETXATTR
endif
$(call using,$(HAVE_GETXATTR),getxattr)
endif

ifndef $(HAVE_INOTIFY)
HAVE_INOTIFY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-inotify have_test_prog)
ifeq ($(HAVE_INOTIFY),1)
	CONFIG_CFLAGS += -DHAVE_INOTIFY
endif
$(call using,$(HAVE_INOTIFY),inotify)
endif

ifndef $(HAVE_INOTIFY1)
HAVE_INOTIFY1 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-inotify1 have_test_prog)
ifeq ($(HAVE_INOTIFY1),1)
	CONFIG_CFLAGS += -DHAVE_INOTIFY1
endif
$(call using,$(HAVE_INOTIFY1),inotify1)
endif

ifndef $(HAVE_IOPORT)
HAVE_IOPORT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ioport have_test_prog)
ifeq ($(HAVE_IOPORT),1)
	CONFIG_CFLAGS += -DHAVE_IOPORT
endif
$(call using,$(HAVE_IOPORT),ioport)
endif

ifndef $(HAVE_IOPL)
HAVE_IOPL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-iopl have_test_prog)
ifeq ($(HAVE_IOPL),1)
	CONFIG_CFLAGS += -DHAVE_IOPL
endif
$(call using,$(HAVE_IOPL),iopl)
endif

ifndef $(HAVE_LGAMMAL)
MATHFUNC=lgammal
export MATHFUNC
HAVE_LGAMMAL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=lgammal have_mathfunc)
ifeq ($(HAVE_LGAMMAL),1)
	CONFIG_CFLAGS += -DHAVE_LGAMMAL
endif
$(call using,$(HAVE_LGAMMAL),lgammal)
endif

ifndef $(HAVE_LGETXATTR)
HAVE_LGETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-lgetxattr have_test_prog)
ifeq ($(HAVE_LGETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_LGETXATTR
endif
$(call using,$(HAVE_LGETXATTR),lgetxattr)
endif

ifndef $(HAVE_LINKAT)
HAVE_LINKAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-linkat have_test_prog)
ifeq ($(HAVE_LINKAT),1)
	CONFIG_CFLAGS += -DHAVE_LINKAT
endif
$(call using,$(HAVE_LINKAT),linkat)
endif

ifndef $(HAVE_LISTXATTR)
HAVE_LISTXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-listxattr have_test_prog)
ifeq ($(HAVE_LISTXATTR),1)
	CONFIG_CFLAGS += -DHAVE_LISTXATTR
endif
$(call using,$(HAVE_LISTXATTR),listxattr)
endif

ifndef $(HAVE_LLISTXATTR)
HAVE_LLISTXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-llistxattr have_test_prog)
ifeq ($(HAVE_LLISTXATTR),1)
	CONFIG_CFLAGS += -DHAVE_LLISTXATTR
endif
$(call using,$(HAVE_LLISTXATTR),llistxattr)
endif

ifndef $(HAVE_LREMOVEXATTR)
HAVE_LREMOVEXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-lremovexattr have_test_prog)
ifeq ($(HAVE_LREMOVEXATTR),1)
	CONFIG_CFLAGS += -DHAVE_LREMOVEXATTR
endif
$(call using,$(HAVE_LREMOVEXATTR),lremovexattr)
endif

ifndef $(HAVE_LOCKF)
HAVE_LOCKF = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-lockf have_test_prog)
ifeq ($(HAVE_LOCKF),1)
	CONFIG_CFLAGS += -DHAVE_LOCKF
endif
$(call using,$(HAVE_LOCKF),lockf)
endif

ifndef $(HAVE_LOGL)
MATHFUNC=logl
export MATHFUNC
HAVE_LOGL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=logl have_mathfunc)
ifeq ($(HAVE_LOGL),1)
	CONFIG_CFLAGS += -DHAVE_LOGL
endif
$(call using,$(HAVE_LOGL),logl)
endif

ifndef $(HAVE_LOOKUP_DCOOKIE)
HAVE_LOOKUP_DCOOKIE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-lookup-dcookie have_test_prog)
ifeq ($(HAVE_LOOKUP_DCOOKIE),1)
	CONFIG_CFLAGS += -DHAVE_LOOKUP_DCOOKIE
endif
$(call using,$(HAVE_LOOKUP_DCOOKIE),lookup_dcookie)
endif

ifndef $(HAVE_LSETXATTR)
HAVE_LSETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-lsetxattr have_test_prog)
ifeq ($(HAVE_LSETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_LSETXATTR
endif
$(call using,$(HAVE_LSETXATTR),lsetxattr)
endif

ifndef $(HAVE_MADVISE)
HAVE_MADVISE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-madvise have_test_prog)
ifeq ($(HAVE_MADVISE),1)
	CONFIG_CFLAGS += -DHAVE_MADVISE
endif
$(call using,$(HAVE_MADVISE),madvise)
endif

ifndef $(HAVE_MALLOPT)
HAVE_MALLOPT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mallopt have_test_prog)
ifeq ($(HAVE_MALLOPT),1)
	CONFIG_CFLAGS += -DHAVE_MALLOPT
endif
$(call using,$(HAVE_MALLOPT),mallopt)
endif

ifndef $(HAVE_MEMFD_CREATE)
HAVE_MEMFD_CREATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-memfd-create have_test_prog)
ifeq ($(HAVE_MEMFD_CREATE),1)
	CONFIG_CFLAGS += -DHAVE_MEMFD_CREATE
$(call using,$(HAVE_MEMFD_CREATE),memfd_create)
endif
endif

ifndef $(HAVE_MINCORE)
HAVE_MINCORE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mincore have_test_prog)
ifeq ($(HAVE_MINCORE),1)
	CONFIG_CFLAGS += -DHAVE_MINCORE
endif
$(call using,$(HAVE_MINCORE),mincore)
endif

ifndef $(HAVE_MKDIRAT)
HAVE_MKDIRAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mkdirat have_test_prog)
ifeq ($(HAVE_MKDIRAT),1)
	CONFIG_CFLAGS += -DHAVE_MKDIRAT
endif
$(call using,$(HAVE_MKDIRAT),mkdirat)
endif

ifndef $(HAVE_MKNODAT)
HAVE_MKNODAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mknodat have_test_prog)
ifeq ($(HAVE_MKNODAT),1)
	CONFIG_CFLAGS += -DHAVE_MKNODAT
endif
$(call using,$(HAVE_MKNODAT),mknodat)
endif

ifndef $(HAVE_MLOCK)
HAVE_MLOCK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mlock have_test_prog)
ifeq ($(HAVE_MLOCK),1)
	CONFIG_CFLAGS += -DHAVE_MLOCK
endif
$(call using,$(HAVE_MLOCK),mlock)
endif

ifndef $(HAVE_MLOCK2)
HAVE_MLOCK2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mlock2 have_test_prog)
ifeq ($(HAVE_MLOCK2),1)
	CONFIG_CFLAGS += -DHAVE_MLOCK2
endif
$(call using,$(HAVE_MLOCK2),mlock2)
endif

ifndef $(HAVE_MLOCKALL)
HAVE_MLOCKALL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mlockall have_test_prog)
ifeq ($(HAVE_MLOCKALL),1)
	CONFIG_CFLAGS += -DHAVE_MLOCKALL
endif
$(call using,$(HAVE_MLOCKALL),mlockall)
endif

ifndef $(HAVE_MODIFY_LDT)
HAVE_MODIFY_LDT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-modify-ldt have_test_prog)
ifeq ($(HAVE_MODIFY_LDT),1)
	CONFIG_CFLAGS += -DHAVE_MODIFY_LDT
endif
$(call using,$(HAVE_MODIFY_LDT),modify_ldt)
endif

ifndef $(HAVE_MPROTECT)
HAVE_MPROTECT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mprotect have_test_prog)
ifeq ($(HAVE_MPROTECT),1)
	CONFIG_CFLAGS += -DHAVE_MPROTECT
endif
$(call using,$(HAVE_MPROTECT),mprotect)
endif

ifndef $(HAVE_MREMAP)
HAVE_MREMAP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mremap have_test_prog)
ifeq ($(HAVE_MREMAP),1)
	CONFIG_CFLAGS += -DHAVE_MREMAP
endif
$(call using,$(HAVE_MREMAP),mremap)
endif

ifndef $(HAVE_MSYNC)
HAVE_MSYNC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-msync have_test_prog)
ifeq ($(HAVE_MSYNC),1)
	CONFIG_CFLAGS += -DHAVE_MSYNC
endif
$(call using,$(HAVE_MSYNC),msync)
endif

ifndef $(HAVE_MUNLOCK)
HAVE_MUNLOCK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-munlock have_test_prog)
ifeq ($(HAVE_MUNLOCK),1)
	CONFIG_CFLAGS += -DHAVE_MUNLOCK
endif
$(call using,$(HAVE_MUNLOCK),munlock)
endif

ifndef $(HAVE_MUNLOCKALL)
HAVE_MUNLOCKALL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-munlockall have_test_prog)
ifeq ($(HAVE_MUNLOCKALL),1)
	CONFIG_CFLAGS += -DHAVE_MUNLOCKALL
endif
$(call using,$(HAVE_MUNLOCKALL),munlockall)
endif


ifndef $(HAVE_NAME_TO_HANDLE_AT)
HAVE_NAME_TO_HANDLE_AT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-name-to-handle-at have_test_prog)
ifeq ($(HAVE_NAME_TO_HANDLE_AT),1)
	CONFIG_CFLAGS += -DHAVE_NAME_TO_HANDLE_AT
endif
$(call using,$(HAVE_NAME_TO_HANDLE_AT),name_to_handle_at)
endif

ifndef $(HAVE_NANOSLEEP)
HAVE_NANOSLEEP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-nanosleep have_test_prog)
ifeq ($(HAVE_NANOSLEEP),1)
	CONFIG_CFLAGS += -DHAVE_NANOSLEEP
endif
$(call using,$(HAVE_NANOSLEEP),nanosleep)
endif

ifndef $(HAVE_NICE)
HAVE_NICE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-nice have_test_prog)
ifeq ($(HAVE_NICE),1)
	CONFIG_CFLAGS += -DHAVE_NICE
endif
$(call using,$(HAVE_NICE),nice)
endif

ifndef $(HAVE_OPENAT)
HAVE_OPENAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-openat have_test_prog)
ifeq ($(HAVE_OPENAT),1)
	CONFIG_CFLAGS += -DHAVE_OPENAT
endif
$(call using,$(HAVE_OPENAT),openat)
endif

ifndef $(HAVE_OPENAT2)
HAVE_OPENAT2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-openat2 have_test_prog)
ifeq ($(HAVE_OPENAT2),1)
	CONFIG_CFLAGS += -DHAVE_OPENAT2
endif
$(call using,$(HAVE_OPENAT2),openat2)
endif

ifndef $(HAVE_OPEN_BY_HANDLE_AT)
HAVE_OPEN_BY_HANDLE_AT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-open-by-handle-at have_test_prog)
ifeq ($(HAVE_OPEN_BY_HANDLE_AT),1)
	CONFIG_CFLAGS += -DHAVE_OPEN_BY_HANDLE_AT
endif
$(call using,$(HAVE_OPEN_BY_HANDLE_AT),open_by_handle_at)
endif

ifndef $(HAVE_PIDFD_GETFD)
HAVE_PIDFD_GETFD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pidfd-getfd have_test_prog)
ifeq ($(HAVE_PIDFD_GETFD),1)
	CONFIG_CFLAGS += -DHAVE_PIDFD_GETFD
endif
$(call using,$(HAVE_PIDFD_GETFD),pidfd_getfd)
endif

ifndef $(HAVE_PIDFD_OPEN)
HAVE_PIDFD_OPEN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pidfd-open have_test_prog)
ifeq ($(HAVE_PIDFD_OPEN),1)
	CONFIG_CFLAGS += -DHAVE_PIDFD_OPEN
endif
$(call using,$(HAVE_PIDFD_OPEN),pidfd_open)
endif

ifndef $(HAVE_PIDFD_SEND_SIGNAL)
HAVE_PIDFD_SEND_SIGNAL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pidfd-send-signal have_test_prog)
ifeq ($(HAVE_PIDFD_SEND_SIGNAL),1)
	CONFIG_CFLAGS += -DHAVE_PIDFD_SEND_SIGNAL
endif
$(call using,$(HAVE_PIDFD_SEND_SIGNAL),pidfd_send_signal)
endif

ifndef $(HAVE_PERSONALITY)
HAVE_PERSONALITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-personality have_test_prog)
ifeq ($(HAVE_PERSONALITY),1)
	CONFIG_CFLAGS += -DHAVE_PERSONALITY
endif
$(call using,$(HAVE_PERSONALITY),personality)
endif

ifndef $(HAVE_PIPE2)
HAVE_PIPE2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pipe2 have_test_prog)
ifeq ($(HAVE_PIPE2),1)
	CONFIG_CFLAGS += -DHAVE_PIPE2
endif
$(call using,$(HAVE_PIPE2),pipe2)
endif

ifndef $(HAVE_PKEY_ALLOC)
HAVE_PKEY_ALLOC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pkey-alloc have_test_prog)
ifeq ($(HAVE_PKEY_ALLOC),1)
	CONFIG_CFLAGS += -DHAVE_PKEY_ALLOC
endif
$(call using,$(HAVE_PKEY_ALLOC),pkey_alloc)
endif

ifndef $(HAVE_PKEY_FREE)
HAVE_PKEY_FREE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pkey-free have_test_prog)
ifeq ($(HAVE_PKEY_FREE),1)
	CONFIG_CFLAGS += -DHAVE_PKEY_FREE
endif
$(call using,$(HAVE_PKEY_FREE),pkey_free)
endif

ifndef $(HAVE_PKEY_GET)
HAVE_PKEY_GET = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pkey-get have_test_prog)
ifeq ($(HAVE_PKEY_GET),1)
	CONFIG_CFLAGS += -DHAVE_PKEY_GET
endif
$(call using,$(HAVE_PKEY_GET),pkey_get)
endif

ifndef $(HAVE_PKEY_SET)
HAVE_PKEY_SET = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pkey-set have_test_prog)
ifeq ($(HAVE_PKEY_SET),1)
	CONFIG_CFLAGS += -DHAVE_PKEY_SET
endif
$(call using,$(HAVE_PKEY_SET),pkey_set)
endif

ifndef $(HAVE_PKEY_MPROTECT)
HAVE_PKEY_MPROTECT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pkey-mprotect have_test_prog)
ifeq ($(HAVE_PKEY_MPROTECT),1)
	CONFIG_CFLAGS += -DHAVE_PKEY_MPROTECT
endif
$(call using,$(HAVE_PKEY_MPROTECT),pkey_mprotect)
endif

ifndef $(HAVE_POSIX_FADVISE)
HAVE_POSIX_FADVISE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-fadvise have_test_prog)
ifeq ($(HAVE_POSIX_FADVISE),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_FADVISE
endif
$(call using,$(HAVE_POSIX_FADVISE),posix_fadvise)
endif

ifndef $(HAVE_POSIX_FALLOCATE)
HAVE_POSIX_FALLOCATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-fallocate have_test_prog)
ifeq ($(HAVE_POSIX_FALLOCATE),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_FALLOCATE
endif
$(call using,$(HAVE_POSIX_FALLOCATE),posix_fallocate)
endif

ifndef $(HAVE_POSIX_MADVISE)
HAVE_POSIX_MADVISE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-madvise have_test_prog)
ifeq ($(HAVE_POSIX_MADVISE),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_MADVISE
endif
$(call using,$(HAVE_POSIX_MADVISE),posix_madvise)
endif

ifndef $(HAVE_POSIX_MEMALIGN)
HAVE_POSIX_MEMALIGN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-memalign have_test_prog)
ifeq ($(HAVE_POSIX_MEMALIGN),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_MEMALIGN
endif
$(call using,$(HAVE_POSIX_MEMALIGN),posix_memalign)
endif

ifndef $(HAVE_MQ_POSIX)
HAVE_MQ_POSIX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mq-posix TEST_LIBS='$(CONFIG_LDFLAGS)' have_test_prog)
ifeq ($(HAVE_MQ_POSIX),1)
	CONFIG_CFLAGS += -DHAVE_MQ_POSIX
endif
$(call using,$(HAVE_MQ_POSIX),POSIX message queues)
endif

ifndef $(HAVE_PPC_GET_TIMEBASE)
HAVE_PPC_GET_TIMEBASE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ppc-get-timebase TEST_LIBS='$(CONFIG_LDFLAGS)' have_test_prog)
ifeq ($(HAVE_PPC_GET_TIMEBASE),1)
	CONFIG_CFLAGS += -DHAVE_PPC_GET_TIMEBASE
endif
$(call using,$(HAVE_PPC_GET_TIMEBASE),__ppc_get_timebase (powerpc))
endif

ifndef $(HAVE_POSIX_OPENPT)
HAVE_POSIX_OPENPT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-openpt have_test_prog)
ifeq ($(HAVE_POSIX_OPENPT),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_OPENPT
endif
$(call using,$(HAVE_POSIX_OPENPT),posix_openpt)
endif

ifndef $(HAVE_QUOTACTL_FD)
HAVE_QUOTACTL_FD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-quotactl-fd have_test_prog)
ifeq ($(HAVE_QUOTACTL_FD),1)
	CONFIG_CFLAGS += -DHAVE_QUOTACTL_FD
endif
$(call using,$(HAVE_QUOTACTL_FD),quotactl_fd)
endif

ifndef $(HAVE_SEM_POSIX)
HAVE_SEM_POSIX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sem-posix TEST_LIBS='$(CONFIG_LDFLAGS)' have_test_prog)
ifeq ($(HAVE_SEM_POSIX),1)
	CONFIG_CFLAGS += -DHAVE_SEM_POSIX
endif
$(call using,$(HAVE_SEM_POSIX),POSIX semaphores)
endif

ifndef $(HAVE_POSIX_SPAWN)
HAVE_POSIX_SPAWN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-posix-spawn have_test_prog)
ifeq ($(HAVE_POSIX_SPAWN),1)
	CONFIG_CFLAGS += -DHAVE_POSIX_SPAWN
endif
$(call using,$(HAVE_POSIX_SPAWN),posix_spawn)
endif

ifndef $(HAVE_POWL)
MATHFUNC=powl
export MATHFUNC
HAVE_POWL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=powl have_mathfunc)
ifeq ($(HAVE_POWL),1)
	CONFIG_CFLAGS += -DHAVE_POWL
endif
$(call using,$(HAVE_POWL),powl)
endif

ifndef $(HAVE_PPOLL)
HAVE_PPOLL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ppoll have_test_prog)
ifeq ($(HAVE_PPOLL),1)
	CONFIG_CFLAGS += -DHAVE_PPOLL
endif
$(call using,$(HAVE_PPOLL),ppoll)
endif

ifndef $(HAVE_PRCTL)
HAVE_PRCTL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-prctl have_test_prog)
ifeq ($(HAVE_PRCTL),1)
	CONFIG_CFLAGS += -DHAVE_PRCTL
endif
$(call using,$(HAVE_PRCTL),prctl)
endif

ifndef $(HAVE_PREADV)
HAVE_PREADV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-preadv have_test_prog)
ifeq ($(HAVE_PREADV),1)
	CONFIG_CFLAGS += -DHAVE_PREADV
endif
$(call using,$(HAVE_PREADV),preadv)
endif

ifndef $(HAVE_PREADV2)
HAVE_PREADV2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-preadv2 have_test_prog)
ifeq ($(HAVE_PREADV2),1)
	CONFIG_CFLAGS += -DHAVE_PREADV2
endif
$(call using,$(HAVE_PREADV2),preadv2)
endif

ifndef $(HAVE_PRLIMIT)
HAVE_PRLIMIT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-prlimit have_test_prog)
ifeq ($(HAVE_PRLIMIT),1)
	CONFIG_CFLAGS += -DHAVE_PRLIMIT
endif
$(call using,$(HAVE_PRLIMIT),prlimit)
endif

ifndef $(HAVE_PROCESS_VM_READV)
HAVE_PROCESS_VM_READV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-process-vm-readv have_test_prog)
ifeq ($(HAVE_PROCESS_VM_READV),1)
	CONFIG_CFLAGS += -DHAVE_PROCESS_VM_READV
endif
$(call using,$(HAVE_PROCESS_VM_READV),process_vm_readv)
endif

ifndef $(HAVE_PROCESS_VM_WRITEV)
HAVE_PROCESS_VM_WRITEV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-process-vm-writev have_test_prog)
ifeq ($(HAVE_PROCESS_VM_WRITEV),1)
	CONFIG_CFLAGS += -DHAVE_PROCESS_VM_WRITEV
endif
$(call using,$(HAVE_PROCESS_VM_WRITEV),process_vm_writev)
endif

ifndef $(HAVE_PSELECT)
HAVE_PSELECT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pselect have_test_prog)
ifeq ($(HAVE_PSELECT),1)
	CONFIG_CFLAGS += -DHAVE_PSELECT
endif
$(call using,$(HAVE_PSELECT),pselect)
endif

ifndef $(HAVE_PTHREAD_ATTR_SETSTACK)
HAVE_PTHREAD_ATTR_SETSTACK = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread-attr-setstack have_test_prog)
ifeq ($(HAVE_PTHREAD_ATTR_SETSTACK),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_ATTR_SETSTACK
endif
$(call using,$(HAVE_PTHREAD_ATTR_SETSTACK),pthread_attr_setstack)
endif

ifndef $(HAVE_PTHREAD_MUTEXATTR_DESTROY)
HAVE_PTHREAD_MUTEXATTR_DESTROY = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread-mutexattr-destroy have_test_prog)
ifeq ($(HAVE_PTHREAD_MUTEXATTR_DESTROY),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_MUTEXATTR_DESTROY
endif
$(call using,$(HAVE_PTHREAD_MUTEXATTR_DESTROY),pthread_mutexattr_destroy)
endif

ifndef $(HAVE_PTHREAD_MUTEXATTR_INIT)
HAVE_PTHREAD_MUTEXATTR_INIT = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread-mutexattr-init have_test_prog)
ifeq ($(HAVE_PTHREAD_MUTEXATTR_INIT),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_MUTEXATTR_INIT
endif
$(call using,$(HAVE_PTHREAD_MUTEXATTR_INIT),pthread_mutexattr_init)
endif

ifndef $(HAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING)
HAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread-mutexattr-setprioceiling have_test_prog)
ifeq ($(HAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING
endif
$(call using,$(HAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING),pthread_mutexattr_setprioceiling)
endif

ifndef $(HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL)
HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread-mutexattr-setprotocol have_test_prog)
ifeq ($(HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_MUTEXATTR_SETPROTOCOL
endif
$(call using,$(HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL),pthread_mutexattr_setprotocol)
endif

ifndef $(HAVE_PTHREAD_SIGQUEUE)
HAVE_PTHREAD_SIGQUEUE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-pthread_sigqueue have_test_prog)
ifeq ($(HAVE_PTHREAD_SIGQUEUE),1)
	CONFIG_CFLAGS += -DHAVE_PTHREAD_SIGQUEUE
endif
$(call using,$(HAVE_PTHREAD_SIGQUEUE),pthread_sigqueue)
endif

ifndef $(HAVE_PTRACE)
HAVE_PTRACE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ptrace have_test_prog)
ifeq ($(HAVE_PTRACE),1)
	CONFIG_CFLAGS += -DHAVE_PTRACE
endif
$(call using,$(HAVE_PTRACE),ptrace)
endif

ifndef $(HAVE_PTSNAME)
HAVE_PTSNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ptsname have_test_prog)
ifeq ($(HAVE_PTSNAME),1)
	CONFIG_CFLAGS += -DHAVE_PTSNAME
endif
$(call using,$(HAVE_PTSNAME),ptsname)
endif

ifndef $(HAVE_PWRITEV)
HAVE_PWRITEV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pwritev have_test_prog)
ifeq ($(HAVE_PWRITEV),1)
	CONFIG_CFLAGS += -DHAVE_PWRITEV
endif
$(call using,$(HAVE_PWRITEV),pwritev)
endif

ifndef $(HAVE_PWRITEV2)
HAVE_PWRITEV2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-pwritev2 have_test_prog)
ifeq ($(HAVE_PWRITEV2),1)
	CONFIG_CFLAGS += -DHAVE_PWRITEV2
endif
$(call using,$(HAVE_PWRITEV2),pwritev2)
endif

ifndef $(HAVE_READLINKAT)
HAVE_READLINKAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-readlinkat have_test_prog)
ifeq ($(HAVE_READLINKAT),1)
	CONFIG_CFLAGS += -DHAVE_READLINKAT
endif
$(call using,$(HAVE_READLINKAT),readlinkat)
endif

ifndef $(HAVE_RECVMMSG)
HAVE_RECVMMSG = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-recvmmsg have_test_prog)
ifeq ($(HAVE_RECVMMSG),1)
	CONFIG_CFLAGS += -DHAVE_RECVMMSG
$(call using,$(HAVE_RECVMMSG),recvmmsg)
endif
endif

ifndef $(HAVE_REMAP_FILE_PAGES)
HAVE_REMAP_FILE_PAGES = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-remap-file-pages have_test_prog)
ifeq ($(HAVE_REMAP_FILE_PAGES),1)
	CONFIG_CFLAGS += -DHAVE_REMAP_FILE_PAGES
endif
$(call using,$(HAVE_REMAP_FILE_PAGES),remap_file_pages)
endif

ifndef $(HAVE_REMOVEXATTR)
HAVE_REMOVEXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-removexattr have_test_prog)
ifeq ($(HAVE_REMOVEXATTR),1)
	CONFIG_CFLAGS += -DHAVE_REMOVEXATTR
endif
$(call using,$(HAVE_REMOVEXATTR),removexattr)
endif

ifndef $(HAVE_RENAMEAT)
HAVE_RENAMEAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-renameat have_test_prog)
ifeq ($(HAVE_RENAMEAT),1)
	CONFIG_CFLAGS += -DHAVE_RENAMEAT
endif
$(call using,$(HAVE_RENAMEAT),renameat)
endif

ifndef $(HAVE_RENAMEAT2)
HAVE_RENAMEAT2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-renameat2 have_test_prog)
ifeq ($(HAVE_RENAMEAT2),1)
	CONFIG_CFLAGS += -DHAVE_RENAMEAT2
endif
$(call using,$(HAVE_RENAMEAT2),renameat2)
endif

ifndef $(HAVE_RINTL)
MATHFUNC=rintl
export MATHFUNC
HAVE_RINTL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=rintl have_mathfunc)
ifeq ($(HAVE_RINTL),1)
	CONFIG_CFLAGS += -DHAVE_RINTL
endif
$(call using,$(HAVE_RINTL),rintl)
endif

ifndef $(HAVE_SBRK)
HAVE_SBRK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sbrk have_test_prog)
ifeq ($(HAVE_SBRK),1)
	CONFIG_CFLAGS += -DHAVE_SBRK
endif
$(call using,$(HAVE_SBRK),sbrk)
endif

ifndef $(HAVE_SCHED_GET_PRIORITY_MAX)
HAVE_SCHED_GET_PRIORITY_MAX = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-get-priority-max have_test_prog)
ifeq ($(HAVE_SCHED_GET_PRIORITY_MAX),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_GET_PRIORITY_MAX
endif
$(call using,$(HAVE_SCHED_GET_PRIORITY_MAX),sched_get_priority_max)
endif

ifndef $(HAVE_SCHED_GET_PRIORITY_MIN)
HAVE_SCHED_GET_PRIORITY_MIN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-get-priority-min have_test_prog)
ifeq ($(HAVE_SCHED_GET_PRIORITY_MIN),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_GET_PRIORITY_MIN
endif
$(call using,$(HAVE_SCHED_GET_PRIORITY_MIN),sched_get_priority_min)
endif

ifndef $(HAVE_SCHED_GETAFFINITY)
HAVE_SCHED_GETAFFINITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-getaffinity have_test_prog)
ifeq ($(HAVE_SCHED_GETAFFINITY),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_GETAFFINITY
endif
$(call using,$(HAVE_SCHED_GETAFFINITY),sched_getaffinity)
endif

ifndef $(HAVE_SCHED_GETCPU)
HAVE_SCHED_GETCPU = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-getcpu have_test_prog)
ifeq ($(HAVE_SCHED_GETCPU),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_GETCPU
endif
$(call using,$(HAVE_SCHED_GETAFFINITY),sched_getcpu)
endif

ifndef $(HAVE_SCHED_RR_GET_INTERVAL)
HAVE_SCHED_RR_GET_INTERVAL = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-rr-get-interval have_test_prog)
ifeq ($(HAVE_SCHED_RR_GET_INTERVAL),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_RR_GET_INTERVAL
endif
$(call using,$(HAVE_SCHED_RR_GET_INTERVAL),sched_rr_get_interval)
endif

ifndef $(HAVE_SCHED_SETSCHEDULER)
HAVE_SCHED_SETSCHEDULER = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-setscheduler have_test_prog)
ifeq ($(HAVE_SCHED_SETSCHEDULER),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_SETSCHEDULER
endif
$(call using,$(HAVE_SCHED_SETSCHEDULER),sched_setscheduler)
endif

ifndef $(HAVE_SCHED_YIELD)
HAVE_SCHED_YIELD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sched-yield have_test_prog)
ifeq ($(HAVE_SCHED_YIELD),1)
	CONFIG_CFLAGS += -DHAVE_SCHED_YIELD
endif
$(call using,$(HAVE_SCHED_YIELD),sched_yield)
endif

ifndef $(HAVE_SENDMMSG)
HAVE_SENDMMSG = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sendmmsg have_test_prog)
ifeq ($(HAVE_SENDMMSG),1)
	CONFIG_CFLAGS += -DHAVE_SENDMMSG
endif
$(call using,$(HAVE_SENDMMSG),sendmmsg)
endif

ifndef $(HAVE_SETDOMAINNAME)
HAVE_SETDOMAINNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setdomainname have_test_prog)
ifeq ($(HAVE_SETDOMAINNAME),1)
	CONFIG_CFLAGS += -DHAVE_SETDOMAINNAME
endif
$(call using,$(HAVE_SETDOMAINNAME),setdomainname)
endif

ifndef $(HAVE_SETFSGID)
HAVE_SETFSGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setfsgid have_test_prog)
ifeq ($(HAVE_SETFSGID),1)
	CONFIG_CFLAGS += -DHAVE_SETFSGID
endif
$(call using,$(HAVE_SETDOMAINNAME),setfsgid)
endif

ifndef $(HAVE_SETFSUID)
HAVE_SETFSUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setfsuid have_test_prog)
ifeq ($(HAVE_SETFSUID),1)
	CONFIG_CFLAGS += -DHAVE_SETFSUID
endif
$(call using,$(HAVE_SETFSUID),setfsuid)
endif

ifndef $(HAVE_SETNS)
HAVE_SETNS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setns have_test_prog)
ifeq ($(HAVE_SETNS),1)
	CONFIG_CFLAGS += -DHAVE_SETNS
endif
$(call using,$(HAVE_SETNS),setns)
endif

ifndef $(HAVE_SETPROCTITLE)
HAVE_SETPROCTITLE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-setproctitle have_test_prog)
ifeq ($(HAVE_SETPROCTITLE),1)
	CONFIG_CFLAGS += -DHAVE_SETPROCTITLE
endif
$(call using,$(HAVE_SETPROCTITLE),setproctitle)
endif

ifndef $(HAVE_SETPGID)
HAVE_SETPGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setpgid have_test_prog)
ifeq ($(HAVE_SETPGID),1)
	CONFIG_CFLAGS += -DHAVE_SETPGID
endif
$(call using,$(HAVE_SETPGID),setpgid)
endif

ifndef $(HAVE_SETPGRP)
HAVE_SETPGRP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setpgrp have_test_prog)
ifeq ($(HAVE_SETPGRP),1)
	CONFIG_CFLAGS += -DHAVE_SETPGRP
endif
$(call using,$(HAVE_SETPGRP),setpgrp)
endif

ifndef $(HAVE_SETPRIORITY)
HAVE_SETPRIORITY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setpriority have_test_prog)
ifeq ($(HAVE_SETPRIORITY),1)
	CONFIG_CFLAGS += -DHAVE_SETPRIORITY
endif
$(call using,$(HAVE_SETPRIORITY),setpriority)
endif

ifndef $(HAVE_SETPWENT)
HAVE_SETPWENT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setpwent have_test_prog)
ifeq ($(HAVE_SETPWENT),1)
	CONFIG_CFLAGS += -DHAVE_SETPWENT
$(call using,$(HAVE_SETPWENT),setpwent)
endif
endif

ifndef $(HAVE_SETREGID)
HAVE_SETREGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setregid have_test_prog)
ifeq ($(HAVE_SETREGID),1)
	CONFIG_CFLAGS += -DHAVE_SETREGID
endif
$(call using,$(HAVE_SETREGID),setregid)
endif

ifndef $(HAVE_SETRESGID)
HAVE_SETRESGID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setresgid have_test_prog)
ifeq ($(HAVE_SETRESGID),1)
	CONFIG_CFLAGS += -DHAVE_SETRESGID
endif
$(call using,$(HAVE_SETRESGID),setresgid)
endif

ifndef $(HAVE_SETRESUID)
HAVE_SETRESUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setresuid have_test_prog)
ifeq ($(HAVE_SETRESUID),1)
	CONFIG_CFLAGS += -DHAVE_SETRESUID
endif
$(call using,$(HAVE_SETRESUID),setresuid)
endif

ifndef $(HAVE_SETREUID)
HAVE_SETREUID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setreuid have_test_prog)
ifeq ($(HAVE_SETREUID),1)
	CONFIG_CFLAGS += -DHAVE_SETREUID
endif
$(call using,$(HAVE_SETREUID),setreuid)
endif

ifndef $(HAVE_SETTIMEOFDAY)
HAVE_SETTIMEOFDAY = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-settimeofday have_test_prog)
ifeq ($(HAVE_SETTIMEOFDAY),1)
      CONFIG_CFLAGS += -DHAVE_SETTIMEOFDAY
endif
$(call using,$(HAVE_SETTIMEOFDAY),settimeofday)
endif

ifndef $(HAVE_SETXATTR)
HAVE_SETXATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-setxattr have_test_prog)
ifeq ($(HAVE_SETXATTR),1)
	CONFIG_CFLAGS += -DHAVE_SETXATTR
endif
$(call using,$(HAVE_SETXATTR),setxattr)
endif

ifndef $(HAVE_SIGALTSTACK)
HAVE_SIGALTSTACK = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sigaltstack have_test_prog)
ifeq ($(HAVE_SIGALTSTACK),1)
	CONFIG_CFLAGS += -DHAVE_SIGALTSTACK
endif
$(call using,$(HAVE_SIGALTSTACK),sigaltstack)
endif

ifndef $(HAVE_SIGNALFD)
HAVE_SIGNALFD = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-signalfd have_test_prog)
ifeq ($(HAVE_SIGNALFD),1)
	CONFIG_CFLAGS += -DHAVE_SIGNALFD
endif
$(call using,$(HAVE_SIGNALFD),signalfd)
endif

ifndef $(HAVE_SIGQUEUE)
HAVE_SIGQUEUE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sigqueue have_test_prog)
ifeq ($(HAVE_SIGQUEUE),1)
	CONFIG_CFLAGS += -DHAVE_SIGQUEUE
endif
$(call using,$(HAVE_SIGQUEUE),sigqueue)
endif

ifndef $(HAVE_SIGWAITINFO)
HAVE_SIGWAITINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sigwaitinfo have_test_prog)
ifeq ($(HAVE_SIGWAITINFO),1)
	CONFIG_CFLAGS += -DHAVE_SIGWAITINFO
endif
$(call using,$(HAVE_SIGWAITINFO),sigwaitinfo)
endif

ifndef $(HAVE_SINHL)
MATHFUNC=sinhl
export MATHFUNC
HAVE_SINHL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=sinhl have_mathfunc)
ifeq ($(HAVE_SINHL),1)
	CONFIG_CFLAGS += -DHAVE_SINHL
endif
$(call using,$(HAVE_SINHL),sinhl)
endif

ifndef $(HAVE_SINL)
MATHFUNC=sinl
export MATHFUNC
HAVE_SINL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=sinl have_mathfunc)
ifeq ($(HAVE_SINL),1)
	CONFIG_CFLAGS += -DHAVE_SINL
endif
$(call using,$(HAVE_SINL),sinl)
endif

ifndef $(HAVE_SPLICE)
HAVE_SPLICE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-splice have_test_prog)
ifeq ($(HAVE_SPLICE),1)
	CONFIG_CFLAGS += -DHAVE_SPLICE
endif
$(call using,$(HAVE_SPLICE),splice)
endif

ifndef $(HAVE_SQRTL)
MATHFUNC=sqrtl
export MATHFUNC
HAVE_SQRTL = $(shell $(MAKE) $(MAKE_OPTS) MATHFUNC=sqrtl have_mathfunc)
ifeq ($(HAVE_SQRTL),1)
	CONFIG_CFLAGS += -DHAVE_SQRTL
endif
$(call using,$(HAVE_SQRTL),sqrtl)
endif

ifndef $(HAVE_STATFS)
HAVE_STATFS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-statfs have_test_prog)
ifeq ($(HAVE_STATFS),1)
	CONFIG_CFLAGS += -DHAVE_STATFS
endif
$(call using,$(HAVE_STATFS),statfs)
endif

ifndef $(HAVE_STIME)
HAVE_STIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-stime have_test_prog)
ifeq ($(HAVE_STIME),1)
	CONFIG_CFLAGS += -DHAVE_STIME
endif
$(call using,$(HAVE_STIME),stime (deprecated))
endif

ifndef $(HAVE_STRLCAT)
STRFUNC=strlcat
export STRFUNC
HAVE_STRLCAT = $(shell $(MAKE) $(MAKE_OPTS) STRFUNC=strlcat have_strfunc)
ifeq ($(HAVE_STRLCAT),1)
	CONFIG_CFLAGS += -DHAVE_STRLCAT
endif
$(call using,$(HAVE_STRLCAT),strlcat)
endif

ifndef $(HAVE_STRLCPY)
STRFUNC=strlcpy
export STRFUNC
HAVE_STRLCPY = $(shell $(MAKE) $(MAKE_OPTS) STRFUNC=strlcpy have_strfunc)
ifeq ($(HAVE_STRLCPY),1)
	CONFIG_CFLAGS += -DHAVE_STRLCPY
endif
$(call using,$(HAVE_STRLCPY),strlcpy)
endif

ifndef $(HAVE_SWAPCONTEXT)
HAVE_SWAPCONTEXT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-swapcontext have_test_prog)
ifeq ($(HAVE_SWAPCONTEXT),1)
	CONFIG_CFLAGS += -DHAVE_SWAPCONTEXT
endif
$(call using,$(HAVE_SWAPCONTEXT),swapcontext)
endif

ifndef $(HAVE_SWAP)
HAVE_SWAP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-swap have_test_prog)
ifeq ($(HAVE_SWAP),1)
	CONFIG_CFLAGS += -DHAVE_SWAP
endif
$(call using,$(HAVE_SWAP),swapon and swapoff)
endif

ifndef $(HAVE_SYNC_FILE_RANGE)
HAVE_SYNC_FILE_RANGE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sync-file-range have_test_prog)
ifeq ($(HAVE_SYNC_FILE_RANGE),1)
	CONFIG_CFLAGS += -DHAVE_SYNC_FILE_RANGE
endif
$(call using,$(HAVE_SYNC_FILE_RANGE),sync_file_range)
endif

ifndef $(HAVE_SYNCFS)
HAVE_SYNCFS = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-syncfs have_test_prog)
ifeq ($(HAVE_SYNCFS),1)
	CONFIG_CFLAGS += -DHAVE_SYNCFS
endif
$(call using,$(HAVE_SYNCFS),syncfs)
endif

ifndef $(HAVE_SYSINFO)
HAVE_SYSINFO = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sysinfo have_test_prog)
ifeq ($(HAVE_SYSINFO),1)
	CONFIG_CFLAGS += -DHAVE_SYSINFO
endif
$(call using,$(HAVE_SYSINFO),sysinfo)
endif

ifndef $(HAVE_MQ_SYSV)
HAVE_MQ_SYSV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-mq-sysv have_test_prog)
ifeq ($(HAVE_MQ_SYSV),1)
	CONFIG_CFLAGS += -DHAVE_MQ_SYSV
endif
$(call using,$(HAVE_MQ_SYSV),SYSV message queues)
endif

ifndef $(HAVE_SEM_SYSV)
HAVE_SEM_SYSV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-sem-sysv have_test_prog)
ifeq ($(HAVE_SEM_SYSV),1)
	CONFIG_CFLAGS += -DHAVE_SEM_SYSV
endif
$(call using,$(HAVE_SEM_SYSV),SYSV semaphores)
endif

ifndef $(HAVE_SEMTIMEDOP)
HAVE_SEMTIMEDOP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-semtimedop have_test_prog)
ifeq ($(HAVE_SEMTIMEDOP),1)
	CONFIG_CFLAGS += -DHAVE_SEMTIMEDOP
endif
$(call using,$(HAVE_SEMTIMEDOP),SYSV semtimedop)
endif

ifndef $(HAVE_SHM_SYSV)
HAVE_SHM_SYSV = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-shm-sysv have_test_prog)
ifeq ($(HAVE_SHM_SYSV),1)
	CONFIG_CFLAGS += -DHAVE_SHM_SYSV
endif
$(call using,$(HAVE_SHM_SYSV),SYSV shared memory)
endif

ifndef $(HAVE_TCDRAIN)
HAVE_TCDRAIN = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tcdrain have_test_prog)
ifeq ($(HAVE_TCDRAIN),1)
	CONFIG_CFLAGS += -DHAVE_TCDRAIN
endif
$(call using,$(HAVE_TCDRAIN),tcdrain)
endif

ifndef $(HAVE_TCFLOW)
HAVE_TCFLOW = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tcflow have_test_prog)
ifeq ($(HAVE_TCFLOW),1)
	CONFIG_CFLAGS += -DHAVE_TCFLOW
endif
$(call using,$(HAVE_TCFLOW),tcflow)
endif

ifndef $(HAVE_TCFLUSH)
HAVE_TCFLUSH = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tcflush have_test_prog)
ifeq ($(HAVE_TCFLUSH),1)
	CONFIG_CFLAGS += -DHAVE_TCFLUSH
endif
$(call using,$(HAVE_TCFLUSH),tcflush)
endif

ifndef $(HAVE_TCGETATTR)
HAVE_TCGETATTR = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tcgetattr have_test_prog)
ifeq ($(HAVE_TCGETATTR),1)
	CONFIG_CFLAGS += -DHAVE_TCGETATTR
endif
$(call using,$(HAVE_TCGETATTR),tcgetattr)
endif

ifndef $(HAVE_TEE)
HAVE_TEE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tee have_test_prog)
ifeq ($(HAVE_TEE),1)
	CONFIG_CFLAGS += -DHAVE_TEE
endif
$(call using,$(HAVE_TEE),tee)
endif

#
#  signal.h may define HAVE_TGKILL, so add _LIBC to
#  avoid name clash
#
ifndef $(HAVE_TGKILL_LIBC)
HAVE_TGKILL_LIBC = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-tgkill have_test_prog)
ifeq ($(HAVE_TGKILL_LIBC),1)
	CONFIG_CFLAGS += -DHAVE_TGKILL_LIBC
endif
$(call using,$(HAVE_TGKILL_LIBC),tgkill)
endif

ifndef $(HAVE_TIMER_CREATE)
HAVE_TIMER_CREATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timer-create have_test_prog)
ifeq ($(HAVE_TIMER_CREATE),1)
	CONFIG_CFLAGS += -DHAVE_TIMER_CREATE
endif
$(call using,$(HAVE_TIMER_CREATE),timer_create)
endif

ifndef $(HAVE_TIMER_DELETE)
HAVE_TIMER_DELETE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timer-delete have_test_prog)
ifeq ($(HAVE_TIMER_DELETE),1)
	CONFIG_CFLAGS += -DHAVE_TIMER_DELETE
endif
$(call using,$(HAVE_TIMER_DELETE),timer_delete)
endif

ifndef $(HAVE_TIMER_GETTIME)
HAVE_TIMER_GETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timer-gettime  have_test_prog)
ifeq ($(HAVE_TIMER_GETTIME),1)
	CONFIG_CFLAGS += -DHAVE_TIMER_GETTIME
endif
$(call using,$(HAVE_TIMER_GETTIME),timer_gettime)
endif

ifndef $(HAVE_TIMER_GETOVERRUN)
HAVE_TIMER_GETOVERRUN = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timer-getoverrun  have_test_prog)
ifeq ($(HAVE_TIMER_GETOVERRUN),1)
	CONFIG_CFLAGS += -DHAVE_TIMER_GETOVERRUN
endif
$(call using,$(HAVE_TIMER_GETOVERRUN),timer_getoverrrun)
endif

ifndef $(HAVE_TIMER_SETTIME)
HAVE_TIMER_SETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timer-settime  have_test_prog)
ifeq ($(HAVE_TIMER_SETTIME),1)
	CONFIG_CFLAGS += -DHAVE_TIMER_SETTIME
endif
$(call using,$(HAVE_TIMER_SETTIME),timer_settime)
endif

ifndef $(HAVE_TIMERFD_CREATE)
HAVE_TIMERFD_CREATE = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timerfd-create have_test_prog)
ifeq ($(HAVE_TIMERFD_CREATE),1)
	CONFIG_CFLAGS += -DHAVE_TIMERFD_CREATE
endif
$(call using,$(HAVE_TIMERFD_CREATE),timerfd_create)
endif

ifndef $(HAVE_TIMERFD_GETTIME)
HAVE_TIMERFD_GETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timerfd-gettime  have_test_prog)
ifeq ($(HAVE_TIMERFD_GETTIME),1)
	CONFIG_CFLAGS += -DHAVE_TIMERFD_GETTIME
endif
$(call using,$(HAVE_TIMERFD_GETTIME),timerfd_gettime)
endif

ifndef $(HAVE_TIMERFD_SETTIME)
HAVE_TIMERFD_SETTIME = $(shell $(MAKE) $(MAKE_OPTS) TEST_LIBS='$(CONFIG_LDFLAGS)' TEST_PROG=test-timerfd-settime  have_test_prog)
ifeq ($(HAVE_TIMERFD_SETTIME),1)
	CONFIG_CFLAGS += -DHAVE_TIMERFD_SETTIME
endif
$(call using,$(HAVE_TIMERFD_SETTIME),timerfd_settime)
endif


ifndef $(HAVE_TTYNAME)
HAVE_TTYNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-ttyname have_test_prog)
ifeq ($(HAVE_TTYNAME),1)
	CONFIG_CFLAGS += -DHAVE_TTYNAME
endif
$(call using,$(HAVE_TTYNAME),ttyname)
endif

ifndef $(HAVE_UMOUNT2)
HAVE_UMOUNT2 = $(shell $(MAKE) $(MAKE_OPTS) TEST_CFLAGS=-Werror TEST_PROG=test-umount2 have_test_prog)
ifeq ($(HAVE_UMOUNT2),1)
	CONFIG_CFLAGS += -DHAVE_UMOUNT2
endif
$(call using,$(HAVE_UMOUNT2),umount2)
endif

ifndef $(HAVE_UNAME)
HAVE_UNAME = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-uname have_test_prog)
ifeq ($(HAVE_UNAME),1)
	CONFIG_CFLAGS += -DHAVE_UNAME
endif
$(call using,$(HAVE_UNAME),uname)
endif

ifndef $(HAVE_UNLINKAT)
HAVE_UNLINKAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-unlinkat have_test_prog)
ifeq ($(HAVE_UNLINKAT),1)
	CONFIG_CFLAGS += -DHAVE_UNLINKAT
endif
$(call using,$(HAVE_UNLINKAT),unlinkat)
endif

ifndef $(HAVE_UNSHARE)
HAVE_UNSHARE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-unshare have_test_prog)
ifeq ($(HAVE_UNSHARE),1)
	CONFIG_CFLAGS += -DHAVE_UNSHARE
endif
$(call using,$(HAVE_UNSHARE),unshare)
endif

ifndef $(HAVE_USTAT)
HAVE_USTAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_CFLAGS=-Werror TEST_PROG=test-ustat have_test_prog)
ifeq ($(HAVE_USTAT),1)
	CONFIG_CFLAGS += -DHAVE_USTAT
endif
$(call using,$(HAVE_USTAT),ustat (deprecated))
endif

ifndef $(HAVE_UTIMENSAT)
HAVE_UTIMENSAT = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-utimensat have_test_prog)
ifeq ($(HAVE_UTIMENSAT),1)
	CONFIG_CFLAGS += -DHAVE_UTIMENSAT
endif
$(call using,$(HAVE_UTIMENSAT),utimensat)
endif

ifndef $(HAVE_VHANGUP)
HAVE_VHANGUP = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vhangup have_test_prog)
ifeq ($(HAVE_VHANGUP),1)
	CONFIG_CFLAGS += -DHAVE_VHANGUP
endif
$(call using,$(HAVE_VHANGUP),vhangup)
endif

ifndef $(HAVE_VMSPLICE)
HAVE_VMSPLICE = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-vmsplice have_test_prog)
ifeq ($(HAVE_VMSPLICE),1)
	CONFIG_CFLAGS += -DHAVE_VMSPLICE
endif
$(call using,$(HAVE_VMSPLICE),vmsplice)
endif

ifndef $(HAVE_WAITID)
HAVE_WAITID = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-waitid have_test_prog)
ifeq ($(HAVE_WAITID),1)
	CONFIG_CFLAGS += -DHAVE_WAITID
endif
$(call using,$(HAVE_WAITID),waitid)
endif

ifndef $(HAVE_WAIT3)
HAVE_WAIT3 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-wait3 have_test_prog)
ifeq ($(HAVE_WAIT3),1)
	CONFIG_CFLAGS += -DHAVE_WAIT3
endif
$(call using,$(HAVE_WAIT3),wait3)
endif

ifndef $(HAVE_WAIT4)
HAVE_WAIT4 = $(shell $(MAKE) $(MAKE_OPTS) TEST_PROG=test-wait4 have_test_prog)
ifeq ($(HAVE_WAIT4),1)
	CONFIG_CFLAGS += -DHAVE_WAIT4
endif
$(call using,$(HAVE_WAIT4),wait4)
endif

ifndef $(HAVE_WCSCASECMP)
WCSFUNC=wcscasecmp
export WCSFUNC
HAVE_WCSCASECMP = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcscasecmp have_wcsfunc)
ifeq ($(HAVE_WCSCASECMP),1)
	CONFIG_CFLAGS += -DHAVE_WCSCASECMP
endif
$(call using,$(HAVE_WCSCASECMP),wcscasecmp)
endif

ifndef $(HAVE_WCSCAT)
WCSFUNC=wcscat
export WCSFUNC
HAVE_WCSCAT = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcscat have_wcsfunc)
ifeq ($(HAVE_WCSCAT),1)
	CONFIG_CFLAGS += -DHAVE_WCSCAT
endif
$(call using,$(HAVE_WCSCAT),wcscat)
endif

ifndef $(HAVE_WCSCHR)
WCSFUNC=wcschr
export WCSFUNC
HAVE_WCSCHR = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcschr have_wcsfunc)
ifeq ($(HAVE_WCSCHR),1)
	CONFIG_CFLAGS += -DHAVE_WCSCHR
endif
$(call using,$(HAVE_WCSCHR),wcschr)
endif

ifndef $(HAVE_WCSCMP)
WCSFUNC=wcscmp
export WCSFUNC
HAVE_WCSCMP = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcscmp have_wcsfunc)
ifeq ($(HAVE_WCSCMP),1)
	CONFIG_CFLAGS += -DHAVE_WCSCMP
endif
$(call using,$(HAVE_WCSCMP),wcscmp)
endif

ifndef $(HAVE_WCSCOLL)
WCSFUNC=wcscoll
export WCSFUNC
HAVE_WCSCOLL = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcscoll have_wcsfunc)
ifeq ($(HAVE_WCSCOLL),1)
	CONFIG_CFLAGS += -DHAVE_WCSCOLL
endif
$(call using,$(HAVE_WCSCOLL),wcscoll)
endif

ifndef $(HAVE_WCSCPY)
WCSFUNC=wcscpy
export WCSFUNC
HAVE_WCSCPY = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcscpy have_wcsfunc)
ifeq ($(HAVE_WCSCPY),1)
	CONFIG_CFLAGS += -DHAVE_WCSCPY
endif
$(call using,$(HAVE_WCSCPY),wcscpy)
endif

ifndef $(HAVE_WCSLCAT)
WCSFUNC=wcslcat
export WCSFUNC
HAVE_WCSLCAT = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcslcat have_wcsfunc)
ifeq ($(HAVE_WCSLCAT),1)
	CONFIG_CFLAGS += -DHAVE_WCSLCAT
endif
$(call using,$(HAVE_WCSLCAT),wcslcat)
endif

ifndef $(HAVE_WCSLCPY)
WCSFUNC=wcslcpy
export WCSFUNC
HAVE_WCSLCPY = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcslcpy have_wcsfunc)
ifeq ($(HAVE_WCSLCPY),1)
	CONFIG_CFLAGS += -DHAVE_WCSLCPY
endif
$(call using,$(HAVE_WCSLCPY),wcslcpy)
endif

ifndef $(HAVE_WCSLEN)
WCSFUNC=wcslen
export WCSFUNC
HAVE_WCSLEN = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcslen have_wcsfunc)
ifeq ($(HAVE_WCSLEN),1)
	CONFIG_CFLAGS += -DHAVE_WCSLEN
endif
$(call using,$(HAVE_WCSLEN),wcslen)
endif

ifndef $(HAVE_WCSNCASECMP)
WCSFUNC=wcsncasecmp
export WCSFUNC
HAVE_WCSNCASECMP = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcsncasecmp have_wcsfunc)
ifeq ($(HAVE_WCSNCASECMP),1)
	CONFIG_CFLAGS += -DHAVE_WCSNCASECMP
endif
$(call using,$(HAVE_WCSNCASECMP),wcsncasecmp)
endif

ifndef $(HAVE_WCSNCAT)
WCSFUNC=wcsncat
export WCSFUNC
HAVE_WCSNCAT = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcsncat have_wcsfunc)
ifeq ($(HAVE_WCSNCAT),1)
	CONFIG_CFLAGS += -DHAVE_WCSNCAT
endif
$(call using,$(HAVE_WCSNCAT),wcsncat)
endif

ifndef $(HAVE_WCSNCMP)
WCSFUNC=wcsncmp
export WCSFUNC
HAVE_WCSNCMP = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcsncmp have_wcsfunc)
ifeq ($(HAVE_WCSNCMP),1)
	CONFIG_CFLAGS += -DHAVE_WCSNCMP
endif
$(call using,$(HAVE_WCSNCMP),wcsncmp)
endif

ifndef $(HAVE_WCSRCHR)
WCSFUNC=wcsrchr
export WCSFUNC
HAVE_WCSRCHR = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcsrchr have_wcsfunc)
ifeq ($(HAVE_WCSRCHR),1)
	CONFIG_CFLAGS += -DHAVE_WCSRCHR
endif
$(call using,$(HAVE_WCSRCHR),wcsrchr)
endif

ifndef $(HAVE_WCSXFRM)
WCSFUNC=wcsxfrm
export WCSFUNC
HAVE_WCSXFRM = $(shell $(MAKE) $(MAKE_OPTS) WCSFUNC=wcsxfrm have_wcsfunc)
ifeq ($(HAVE_WCSXFRM),1)
	CONFIG_CFLAGS += -DHAVE_WCSXFRM
endif
$(call using,$(HAVE_WCSXFRM),wcsxfrm)
endif

ifneq ($(VERBOSE),)
$(info $(newline)CONFIG_LDFLAGS: $(CONFIG_LDFLAGS))
$(info CONFIG_CFLAGS: $(CONFIG_CFLAGS)$(newline))
endif

endif


.SUFFIXES: .c .o

#
#  save configuration
#
.PHONY: save_config
save_config:
	@echo $(CONFIG_CFLAGS) | tr ' ' '\n' | grep "\-D" | sed s'/CONFIG_CFLAGS=//' | sed s'/-D/#define /' | sort > config.h
	@echo CONFIG_LDFLAGS=$(CONFIG_LDFLAGS) >> config
	@echo CONFIG_OBJS=$(CONFIG_OBJS) >> config

#
#  check if we can build against AppArmor
#
.PHONY: have_apparmor
have_apparmor: $(DIR)/test-apparmor.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) $(DIR)/test-apparmor.c $(LIB_APPARMOR) -o $(DIR)/test-apparmor 2> /dev/null || true
	@$(APPARMOR_PARSER) -Q usr.bin.pulseaudio.eg -o apparmor-data.bin 2> /dev/null; \
	if [ $$? -ne 0 ]; then \
		echo 0 ;\
	else \
		if [ -f $(DIR)/test-apparmor ]; then \
			if [ -x "$(APPARMOR_PARSER)" ]; then \
				if [ -f apparmor-data.bin ]; then \
					echo 1 ;\
				else \
					echo 0 ;\
				fi \
			else \
				echo 0 ;\
			fi \
		else \
			echo 0 ;\
		fi \
	fi
	@rm -f $(DIR)/test-apparmor apparmor-data.bin

#
#  check if compiler supports a specific floating point decimal format
#
.PHONY: have_float
have_float:
	@$(CC) $(CFLAGS) $(CPPFLAGS) -DFLOAT=$(FLOAT_TYPE) -o $(DIR)/test-float $(DIR)/test-float.c -lm 2> /dev/null || true
	@if [ -f $(DIR)/test-float ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -f $(DIR)/test-float

#
#  check if we have a specific header
#
.PHONY: have_header_h
have_header_h:
	@echo "#include <sys/types.h>" > $(DIR)/test-header.c
	@echo "#include <$(HEADER)>" >> $(DIR)/test-header.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $(DIR)/test-header.o $(DIR)/test-header.c 2> /dev/null || true
	@if [ -f $(DIR)/test-header.o ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -f $(DIR)/test-header.o $(DIR)/test-header.c

#
#  check if we can build using a specific test program
#
.PHONY: have_test_prog
have_test_prog: $(DIR)/$(TEST_PROG).c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -Itest $(TEST_CFLAGS) $(DIR)/$(TEST_PROG).c $(TEST_LIBS) -o $(DIR)/$(TEST_PROG) $(LDFLAGS) 2> /dev/null || true
	@if [ -f $(DIR)/$(TEST_PROG) ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
		@rm -rf $(DIR)/$(TEST_PROG)

#
#  check if we can build vecmath related code
#
.PHONY: have_vecmath
have_vecmath: stress-vecmath.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -Itest -DHAVE_VECMATH -c -o stress-vecmath-test.o stress-vecmath.c 2> /dev/null || true
	@if [ -f stress-vecmath-test.o ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -rf stress-vecmath-test.o

#
#  check if we can build atomic related code
#
.PHONY: have_atomic
have_atomic: stress-atomic.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -Itest -DTEST_ATOMIC_BUILD -DHAVE_ATOMIC stress-atomic.c $(LIB_ATOMIC) -o stress-atomic-test 2> /dev/null || true
	@if [ -f stress-atomic-test ]; then \
		(./stress-atomic-test > /dev/null 2>&1) && echo 1 || echo 0 ; \
	else \
		echo 0 ; \
	fi
	@rm -rf stress-atomic-test

#
#  check if we have specific math functions
#
.PHONY: have_mathfunc
have_mathfunc: $(DIR)/test-mathfunc.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -DMATHFUNC=$(MATHFUNC) $(DIR)/test-mathfunc.c -o $(DIR)/test-mathfunc -lm 2> /dev/null || true
	@if [ -f $(DIR)/test-mathfunc ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -rf $(DIR)/test-mathfunc

#
#  check if we have specific string str* functions
#
.PHONY: have_strfunc
have_strfunc: $(DIR)/test-strfunc.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -DSTRFUNC=$(STRFUNC) $(DIR)/test-strfunc.c -o $(DIR)/test-strfunc $(LIB_BSD) 2> /dev/null || true
	@if [ -f $(DIR)/test-strfunc ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -rf $(DIR)/test-strfunc

#
#  check if we have specific wide string wcs* functions
#
.PHONY: have_wcsfunc
have_wcsfunc: $(DIR)/test-wcsfunc.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -DWCSFUNC=$(WCSFUNC) $(DIR)/test-wcsfunc.c -o $(DIR)/test-wcsfunc $(LIB_BSD) 2> /dev/null || true
	@if [ -f $(DIR)/test-wcsfunc ]; then \
		echo 1 ;\
	else \
		echo 0 ;\
	fi
	@rm -rf $(DIR)/test-wcsfunc
